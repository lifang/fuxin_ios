// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Models.pb.h"

@implementation ModelsRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ModelsRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface AuthenticationRequest ()
@property (retain) NSString* userName;
@property (retain) NSString* password;
@end

@implementation AuthenticationRequest

- (BOOL) hasUserName {
  return !!hasUserName_;
}
- (void) setHasUserName:(BOOL) value {
  hasUserName_ = !!value;
}
@synthesize userName;
- (BOOL) hasPassword {
  return !!hasPassword_;
}
- (void) setHasPassword:(BOOL) value {
  hasPassword_ = !!value;
}
@synthesize password;
- (void) dealloc {
  self.userName = nil;
  self.password = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userName = @"";
    self.password = @"";
  }
  return self;
}
static AuthenticationRequest* defaultAuthenticationRequestInstance = nil;
+ (void) initialize {
  if (self == [AuthenticationRequest class]) {
    defaultAuthenticationRequestInstance = [[AuthenticationRequest alloc] init];
  }
}
+ (AuthenticationRequest*) defaultInstance {
  return defaultAuthenticationRequestInstance;
}
- (AuthenticationRequest*) defaultInstance {
  return defaultAuthenticationRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserName) {
    [output writeString:1 value:self.userName];
  }
  if (self.hasPassword) {
    [output writeString:2 value:self.password];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserName) {
    size += computeStringSize(1, self.userName);
  }
  if (self.hasPassword) {
    size += computeStringSize(2, self.password);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (AuthenticationRequest*) parseFromData:(NSData*) data {
  return (AuthenticationRequest*)[[[AuthenticationRequest builder] mergeFromData:data] build];
}
+ (AuthenticationRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthenticationRequest*)[[[AuthenticationRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AuthenticationRequest*) parseFromInputStream:(NSInputStream*) input {
  return (AuthenticationRequest*)[[[AuthenticationRequest builder] mergeFromInputStream:input] build];
}
+ (AuthenticationRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthenticationRequest*)[[[AuthenticationRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AuthenticationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AuthenticationRequest*)[[[AuthenticationRequest builder] mergeFromCodedInputStream:input] build];
}
+ (AuthenticationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthenticationRequest*)[[[AuthenticationRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AuthenticationRequest_Builder*) builder {
  return [[[AuthenticationRequest_Builder alloc] init] autorelease];
}
+ (AuthenticationRequest_Builder*) builderWithPrototype:(AuthenticationRequest*) prototype {
  return [[AuthenticationRequest builder] mergeFrom:prototype];
}
- (AuthenticationRequest_Builder*) builder {
  return [AuthenticationRequest builder];
}
@end

@interface AuthenticationRequest_Builder()
@property (retain) AuthenticationRequest* result;
@end

@implementation AuthenticationRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AuthenticationRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AuthenticationRequest_Builder*) clear {
  self.result = [[[AuthenticationRequest alloc] init] autorelease];
  return self;
}
- (AuthenticationRequest_Builder*) clone {
  return [AuthenticationRequest builderWithPrototype:result];
}
- (AuthenticationRequest*) defaultInstance {
  return [AuthenticationRequest defaultInstance];
}
- (AuthenticationRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AuthenticationRequest*) buildPartial {
  AuthenticationRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AuthenticationRequest_Builder*) mergeFrom:(AuthenticationRequest*) other {
  if (other == [AuthenticationRequest defaultInstance]) {
    return self;
  }
  if (other.hasUserName) {
    [self setUserName:other.userName];
  }
  if (other.hasPassword) {
    [self setPassword:other.password];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AuthenticationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AuthenticationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserName:[input readString]];
        break;
      }
      case 18: {
        [self setPassword:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUserName {
  return result.hasUserName;
}
- (NSString*) userName {
  return result.userName;
}
- (AuthenticationRequest_Builder*) setUserName:(NSString*) value {
  result.hasUserName = YES;
  result.userName = value;
  return self;
}
- (AuthenticationRequest_Builder*) clearUserName {
  result.hasUserName = NO;
  result.userName = @"";
  return self;
}
- (BOOL) hasPassword {
  return result.hasPassword;
}
- (NSString*) password {
  return result.password;
}
- (AuthenticationRequest_Builder*) setPassword:(NSString*) value {
  result.hasPassword = YES;
  result.password = value;
  return self;
}
- (AuthenticationRequest_Builder*) clearPassword {
  result.hasPassword = NO;
  result.password = @"";
  return self;
}
@end

@interface AuthenticationResponse ()
@property BOOL isSucceed;
@property int32_t userId;
@property (retain) NSString* token;
@property int32_t passwordFailCount;
@property AuthenticationResponse_ErrorCodeType errorCode;
@end

@implementation AuthenticationResponse

- (BOOL) hasIsSucceed {
  return !!hasIsSucceed_;
}
- (void) setHasIsSucceed:(BOOL) value {
  hasIsSucceed_ = !!value;
}
- (BOOL) isSucceed {
  return !!isSucceed_;
}
- (void) setIsSucceed:(BOOL) value {
  isSucceed_ = !!value;
}
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) value {
  hasToken_ = !!value;
}
@synthesize token;
- (BOOL) hasPasswordFailCount {
  return !!hasPasswordFailCount_;
}
- (void) setHasPasswordFailCount:(BOOL) value {
  hasPasswordFailCount_ = !!value;
}
@synthesize passwordFailCount;
- (BOOL) hasErrorCode {
  return !!hasErrorCode_;
}
- (void) setHasErrorCode:(BOOL) value {
  hasErrorCode_ = !!value;
}
@synthesize errorCode;
- (void) dealloc {
  self.token = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.isSucceed = NO;
    self.userId = 0;
    self.token = @"";
    self.passwordFailCount = 0;
    self.errorCode = AuthenticationResponse_ErrorCodeTypeInvalidUserName;
  }
  return self;
}
static AuthenticationResponse* defaultAuthenticationResponseInstance = nil;
+ (void) initialize {
  if (self == [AuthenticationResponse class]) {
    defaultAuthenticationResponseInstance = [[AuthenticationResponse alloc] init];
  }
}
+ (AuthenticationResponse*) defaultInstance {
  return defaultAuthenticationResponseInstance;
}
- (AuthenticationResponse*) defaultInstance {
  return defaultAuthenticationResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsSucceed) {
    [output writeBool:1 value:self.isSucceed];
  }
  if (self.hasUserId) {
    [output writeInt32:2 value:self.userId];
  }
  if (self.hasToken) {
    [output writeString:3 value:self.token];
  }
  if (self.hasPasswordFailCount) {
    [output writeInt32:4 value:self.passwordFailCount];
  }
  if (self.hasErrorCode) {
    [output writeEnum:5 value:self.errorCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasIsSucceed) {
    size += computeBoolSize(1, self.isSucceed);
  }
  if (self.hasUserId) {
    size += computeInt32Size(2, self.userId);
  }
  if (self.hasToken) {
    size += computeStringSize(3, self.token);
  }
  if (self.hasPasswordFailCount) {
    size += computeInt32Size(4, self.passwordFailCount);
  }
  if (self.hasErrorCode) {
    size += computeEnumSize(5, self.errorCode);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (AuthenticationResponse*) parseFromData:(NSData*) data {
  return (AuthenticationResponse*)[[[AuthenticationResponse builder] mergeFromData:data] build];
}
+ (AuthenticationResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthenticationResponse*)[[[AuthenticationResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AuthenticationResponse*) parseFromInputStream:(NSInputStream*) input {
  return (AuthenticationResponse*)[[[AuthenticationResponse builder] mergeFromInputStream:input] build];
}
+ (AuthenticationResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthenticationResponse*)[[[AuthenticationResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AuthenticationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AuthenticationResponse*)[[[AuthenticationResponse builder] mergeFromCodedInputStream:input] build];
}
+ (AuthenticationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AuthenticationResponse*)[[[AuthenticationResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AuthenticationResponse_Builder*) builder {
  return [[[AuthenticationResponse_Builder alloc] init] autorelease];
}
+ (AuthenticationResponse_Builder*) builderWithPrototype:(AuthenticationResponse*) prototype {
  return [[AuthenticationResponse builder] mergeFrom:prototype];
}
- (AuthenticationResponse_Builder*) builder {
  return [AuthenticationResponse builder];
}
@end

BOOL AuthenticationResponse_ErrorCodeTypeIsValidValue(AuthenticationResponse_ErrorCodeType value) {
  switch (value) {
    case AuthenticationResponse_ErrorCodeTypeInvalidUserName:
    case AuthenticationResponse_ErrorCodeTypeInvalidPassword:
    case AuthenticationResponse_ErrorCodeTypeInvalidPasswordExceedCount:
    case AuthenticationResponse_ErrorCodeTypeNotActivate:
    case AuthenticationResponse_ErrorCodeTypeSucceed:
      return YES;
    default:
      return NO;
  }
}
@interface AuthenticationResponse_Builder()
@property (retain) AuthenticationResponse* result;
@end

@implementation AuthenticationResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[AuthenticationResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (AuthenticationResponse_Builder*) clear {
  self.result = [[[AuthenticationResponse alloc] init] autorelease];
  return self;
}
- (AuthenticationResponse_Builder*) clone {
  return [AuthenticationResponse builderWithPrototype:result];
}
- (AuthenticationResponse*) defaultInstance {
  return [AuthenticationResponse defaultInstance];
}
- (AuthenticationResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AuthenticationResponse*) buildPartial {
  AuthenticationResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (AuthenticationResponse_Builder*) mergeFrom:(AuthenticationResponse*) other {
  if (other == [AuthenticationResponse defaultInstance]) {
    return self;
  }
  if (other.hasIsSucceed) {
    [self setIsSucceed:other.isSucceed];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  if (other.hasPasswordFailCount) {
    [self setPasswordFailCount:other.passwordFailCount];
  }
  if (other.hasErrorCode) {
    [self setErrorCode:other.errorCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AuthenticationResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AuthenticationResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIsSucceed:[input readBool]];
        break;
      }
      case 16: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 26: {
        [self setToken:[input readString]];
        break;
      }
      case 32: {
        [self setPasswordFailCount:[input readInt32]];
        break;
      }
      case 40: {
        int32_t value = [input readEnum];
        if (AuthenticationResponse_ErrorCodeTypeIsValidValue(value)) {
          [self setErrorCode:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasIsSucceed {
  return result.hasIsSucceed;
}
- (BOOL) isSucceed {
  return result.isSucceed;
}
- (AuthenticationResponse_Builder*) setIsSucceed:(BOOL) value {
  result.hasIsSucceed = YES;
  result.isSucceed = value;
  return self;
}
- (AuthenticationResponse_Builder*) clearIsSucceed {
  result.hasIsSucceed = NO;
  result.isSucceed = NO;
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (AuthenticationResponse_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (AuthenticationResponse_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasToken {
  return result.hasToken;
}
- (NSString*) token {
  return result.token;
}
- (AuthenticationResponse_Builder*) setToken:(NSString*) value {
  result.hasToken = YES;
  result.token = value;
  return self;
}
- (AuthenticationResponse_Builder*) clearToken {
  result.hasToken = NO;
  result.token = @"";
  return self;
}
- (BOOL) hasPasswordFailCount {
  return result.hasPasswordFailCount;
}
- (int32_t) passwordFailCount {
  return result.passwordFailCount;
}
- (AuthenticationResponse_Builder*) setPasswordFailCount:(int32_t) value {
  result.hasPasswordFailCount = YES;
  result.passwordFailCount = value;
  return self;
}
- (AuthenticationResponse_Builder*) clearPasswordFailCount {
  result.hasPasswordFailCount = NO;
  result.passwordFailCount = 0;
  return self;
}
- (BOOL) hasErrorCode {
  return result.hasErrorCode;
}
- (AuthenticationResponse_ErrorCodeType) errorCode {
  return result.errorCode;
}
- (AuthenticationResponse_Builder*) setErrorCode:(AuthenticationResponse_ErrorCodeType) value {
  result.hasErrorCode = YES;
  result.errorCode = value;
  return self;
}
- (AuthenticationResponse_Builder*) clearErrorCode {
  result.hasErrorCode = NO;
  result.errorCode = AuthenticationResponse_ErrorCodeTypeInvalidUserName;
  return self;
}
@end

@interface UnAuthenticationRequest ()
@property (retain) NSString* token;
@property int32_t userId;
@end

@implementation UnAuthenticationRequest

- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) value {
  hasToken_ = !!value;
}
@synthesize token;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (void) dealloc {
  self.token = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.token = @"";
    self.userId = 0;
  }
  return self;
}
static UnAuthenticationRequest* defaultUnAuthenticationRequestInstance = nil;
+ (void) initialize {
  if (self == [UnAuthenticationRequest class]) {
    defaultUnAuthenticationRequestInstance = [[UnAuthenticationRequest alloc] init];
  }
}
+ (UnAuthenticationRequest*) defaultInstance {
  return defaultUnAuthenticationRequestInstance;
}
- (UnAuthenticationRequest*) defaultInstance {
  return defaultUnAuthenticationRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasToken) {
    [output writeString:1 value:self.token];
  }
  if (self.hasUserId) {
    [output writeInt32:2 value:self.userId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasToken) {
    size += computeStringSize(1, self.token);
  }
  if (self.hasUserId) {
    size += computeInt32Size(2, self.userId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UnAuthenticationRequest*) parseFromData:(NSData*) data {
  return (UnAuthenticationRequest*)[[[UnAuthenticationRequest builder] mergeFromData:data] build];
}
+ (UnAuthenticationRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UnAuthenticationRequest*)[[[UnAuthenticationRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UnAuthenticationRequest*) parseFromInputStream:(NSInputStream*) input {
  return (UnAuthenticationRequest*)[[[UnAuthenticationRequest builder] mergeFromInputStream:input] build];
}
+ (UnAuthenticationRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UnAuthenticationRequest*)[[[UnAuthenticationRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UnAuthenticationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UnAuthenticationRequest*)[[[UnAuthenticationRequest builder] mergeFromCodedInputStream:input] build];
}
+ (UnAuthenticationRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UnAuthenticationRequest*)[[[UnAuthenticationRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UnAuthenticationRequest_Builder*) builder {
  return [[[UnAuthenticationRequest_Builder alloc] init] autorelease];
}
+ (UnAuthenticationRequest_Builder*) builderWithPrototype:(UnAuthenticationRequest*) prototype {
  return [[UnAuthenticationRequest builder] mergeFrom:prototype];
}
- (UnAuthenticationRequest_Builder*) builder {
  return [UnAuthenticationRequest builder];
}
@end

@interface UnAuthenticationRequest_Builder()
@property (retain) UnAuthenticationRequest* result;
@end

@implementation UnAuthenticationRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UnAuthenticationRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UnAuthenticationRequest_Builder*) clear {
  self.result = [[[UnAuthenticationRequest alloc] init] autorelease];
  return self;
}
- (UnAuthenticationRequest_Builder*) clone {
  return [UnAuthenticationRequest builderWithPrototype:result];
}
- (UnAuthenticationRequest*) defaultInstance {
  return [UnAuthenticationRequest defaultInstance];
}
- (UnAuthenticationRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UnAuthenticationRequest*) buildPartial {
  UnAuthenticationRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UnAuthenticationRequest_Builder*) mergeFrom:(UnAuthenticationRequest*) other {
  if (other == [UnAuthenticationRequest defaultInstance]) {
    return self;
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UnAuthenticationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UnAuthenticationRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setToken:[input readString]];
        break;
      }
      case 16: {
        [self setUserId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasToken {
  return result.hasToken;
}
- (NSString*) token {
  return result.token;
}
- (UnAuthenticationRequest_Builder*) setToken:(NSString*) value {
  result.hasToken = YES;
  result.token = value;
  return self;
}
- (UnAuthenticationRequest_Builder*) clearToken {
  result.hasToken = NO;
  result.token = @"";
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (UnAuthenticationRequest_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (UnAuthenticationRequest_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
@end

@interface UnAuthenticationResponse ()
@property BOOL isSucceed;
@property int32_t userId;
@end

@implementation UnAuthenticationResponse

- (BOOL) hasIsSucceed {
  return !!hasIsSucceed_;
}
- (void) setHasIsSucceed:(BOOL) value {
  hasIsSucceed_ = !!value;
}
- (BOOL) isSucceed {
  return !!isSucceed_;
}
- (void) setIsSucceed:(BOOL) value {
  isSucceed_ = !!value;
}
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.isSucceed = NO;
    self.userId = 0;
  }
  return self;
}
static UnAuthenticationResponse* defaultUnAuthenticationResponseInstance = nil;
+ (void) initialize {
  if (self == [UnAuthenticationResponse class]) {
    defaultUnAuthenticationResponseInstance = [[UnAuthenticationResponse alloc] init];
  }
}
+ (UnAuthenticationResponse*) defaultInstance {
  return defaultUnAuthenticationResponseInstance;
}
- (UnAuthenticationResponse*) defaultInstance {
  return defaultUnAuthenticationResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsSucceed) {
    [output writeBool:1 value:self.isSucceed];
  }
  if (self.hasUserId) {
    [output writeInt32:2 value:self.userId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasIsSucceed) {
    size += computeBoolSize(1, self.isSucceed);
  }
  if (self.hasUserId) {
    size += computeInt32Size(2, self.userId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UnAuthenticationResponse*) parseFromData:(NSData*) data {
  return (UnAuthenticationResponse*)[[[UnAuthenticationResponse builder] mergeFromData:data] build];
}
+ (UnAuthenticationResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UnAuthenticationResponse*)[[[UnAuthenticationResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UnAuthenticationResponse*) parseFromInputStream:(NSInputStream*) input {
  return (UnAuthenticationResponse*)[[[UnAuthenticationResponse builder] mergeFromInputStream:input] build];
}
+ (UnAuthenticationResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UnAuthenticationResponse*)[[[UnAuthenticationResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UnAuthenticationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UnAuthenticationResponse*)[[[UnAuthenticationResponse builder] mergeFromCodedInputStream:input] build];
}
+ (UnAuthenticationResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UnAuthenticationResponse*)[[[UnAuthenticationResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UnAuthenticationResponse_Builder*) builder {
  return [[[UnAuthenticationResponse_Builder alloc] init] autorelease];
}
+ (UnAuthenticationResponse_Builder*) builderWithPrototype:(UnAuthenticationResponse*) prototype {
  return [[UnAuthenticationResponse builder] mergeFrom:prototype];
}
- (UnAuthenticationResponse_Builder*) builder {
  return [UnAuthenticationResponse builder];
}
@end

@interface UnAuthenticationResponse_Builder()
@property (retain) UnAuthenticationResponse* result;
@end

@implementation UnAuthenticationResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UnAuthenticationResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UnAuthenticationResponse_Builder*) clear {
  self.result = [[[UnAuthenticationResponse alloc] init] autorelease];
  return self;
}
- (UnAuthenticationResponse_Builder*) clone {
  return [UnAuthenticationResponse builderWithPrototype:result];
}
- (UnAuthenticationResponse*) defaultInstance {
  return [UnAuthenticationResponse defaultInstance];
}
- (UnAuthenticationResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UnAuthenticationResponse*) buildPartial {
  UnAuthenticationResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UnAuthenticationResponse_Builder*) mergeFrom:(UnAuthenticationResponse*) other {
  if (other == [UnAuthenticationResponse defaultInstance]) {
    return self;
  }
  if (other.hasIsSucceed) {
    [self setIsSucceed:other.isSucceed];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UnAuthenticationResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UnAuthenticationResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIsSucceed:[input readBool]];
        break;
      }
      case 16: {
        [self setUserId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasIsSucceed {
  return result.hasIsSucceed;
}
- (BOOL) isSucceed {
  return result.isSucceed;
}
- (UnAuthenticationResponse_Builder*) setIsSucceed:(BOOL) value {
  result.hasIsSucceed = YES;
  result.isSucceed = value;
  return self;
}
- (UnAuthenticationResponse_Builder*) clearIsSucceed {
  result.hasIsSucceed = NO;
  result.isSucceed = NO;
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (UnAuthenticationResponse_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (UnAuthenticationResponse_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
@end

@interface Contact ()
@property int32_t contactId;
@property (retain) NSString* name;
@property (retain) NSString* customName;
@property (retain) NSString* pinyin;
@property BOOL isBlocked;
@property (retain) NSString* lastContactTime;
@property int32_t gender;
@property int32_t source;
@property (retain) NSString* tileUrl;
@property BOOL isProvider;
@property (retain) NSString* lisence;
@property (retain) NSString* publishClassType;
@end

@implementation Contact

- (BOOL) hasContactId {
  return !!hasContactId_;
}
- (void) setHasContactId:(BOOL) value {
  hasContactId_ = !!value;
}
@synthesize contactId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasCustomName {
  return !!hasCustomName_;
}
- (void) setHasCustomName:(BOOL) value {
  hasCustomName_ = !!value;
}
@synthesize customName;
- (BOOL) hasPinyin {
  return !!hasPinyin_;
}
- (void) setHasPinyin:(BOOL) value {
  hasPinyin_ = !!value;
}
@synthesize pinyin;
- (BOOL) hasIsBlocked {
  return !!hasIsBlocked_;
}
- (void) setHasIsBlocked:(BOOL) value {
  hasIsBlocked_ = !!value;
}
- (BOOL) isBlocked {
  return !!isBlocked_;
}
- (void) setIsBlocked:(BOOL) value {
  isBlocked_ = !!value;
}
- (BOOL) hasLastContactTime {
  return !!hasLastContactTime_;
}
- (void) setHasLastContactTime:(BOOL) value {
  hasLastContactTime_ = !!value;
}
@synthesize lastContactTime;
- (BOOL) hasGender {
  return !!hasGender_;
}
- (void) setHasGender:(BOOL) value {
  hasGender_ = !!value;
}
@synthesize gender;
- (BOOL) hasSource {
  return !!hasSource_;
}
- (void) setHasSource:(BOOL) value {
  hasSource_ = !!value;
}
@synthesize source;
- (BOOL) hasTileUrl {
  return !!hasTileUrl_;
}
- (void) setHasTileUrl:(BOOL) value {
  hasTileUrl_ = !!value;
}
@synthesize tileUrl;
- (BOOL) hasIsProvider {
  return !!hasIsProvider_;
}
- (void) setHasIsProvider:(BOOL) value {
  hasIsProvider_ = !!value;
}
- (BOOL) isProvider {
  return !!isProvider_;
}
- (void) setIsProvider:(BOOL) value {
  isProvider_ = !!value;
}
- (BOOL) hasLisence {
  return !!hasLisence_;
}
- (void) setHasLisence:(BOOL) value {
  hasLisence_ = !!value;
}
@synthesize lisence;
- (BOOL) hasPublishClassType {
  return !!hasPublishClassType_;
}
- (void) setHasPublishClassType:(BOOL) value {
  hasPublishClassType_ = !!value;
}
@synthesize publishClassType;
- (void) dealloc {
  self.name = nil;
  self.customName = nil;
  self.pinyin = nil;
  self.lastContactTime = nil;
  self.tileUrl = nil;
  self.lisence = nil;
  self.publishClassType = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.contactId = 0;
    self.name = @"";
    self.customName = @"";
    self.pinyin = @"";
    self.isBlocked = NO;
    self.lastContactTime = @"";
    self.gender = 0;
    self.source = 0;
    self.tileUrl = @"";
    self.isProvider = NO;
    self.lisence = @"";
    self.publishClassType = @"";
  }
  return self;
}
static Contact* defaultContactInstance = nil;
+ (void) initialize {
  if (self == [Contact class]) {
    defaultContactInstance = [[Contact alloc] init];
  }
}
+ (Contact*) defaultInstance {
  return defaultContactInstance;
}
- (Contact*) defaultInstance {
  return defaultContactInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasContactId) {
    [output writeInt32:1 value:self.contactId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasCustomName) {
    [output writeString:3 value:self.customName];
  }
  if (self.hasPinyin) {
    [output writeString:4 value:self.pinyin];
  }
  if (self.hasIsBlocked) {
    [output writeBool:5 value:self.isBlocked];
  }
  if (self.hasLastContactTime) {
    [output writeString:6 value:self.lastContactTime];
  }
  if (self.hasGender) {
    [output writeInt32:7 value:self.gender];
  }
  if (self.hasSource) {
    [output writeInt32:8 value:self.source];
  }
  if (self.hasTileUrl) {
    [output writeString:9 value:self.tileUrl];
  }
  if (self.hasIsProvider) {
    [output writeBool:10 value:self.isProvider];
  }
  if (self.hasLisence) {
    [output writeString:11 value:self.lisence];
  }
  if (self.hasPublishClassType) {
    [output writeString:12 value:self.publishClassType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasContactId) {
    size += computeInt32Size(1, self.contactId);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasCustomName) {
    size += computeStringSize(3, self.customName);
  }
  if (self.hasPinyin) {
    size += computeStringSize(4, self.pinyin);
  }
  if (self.hasIsBlocked) {
    size += computeBoolSize(5, self.isBlocked);
  }
  if (self.hasLastContactTime) {
    size += computeStringSize(6, self.lastContactTime);
  }
  if (self.hasGender) {
    size += computeInt32Size(7, self.gender);
  }
  if (self.hasSource) {
    size += computeInt32Size(8, self.source);
  }
  if (self.hasTileUrl) {
    size += computeStringSize(9, self.tileUrl);
  }
  if (self.hasIsProvider) {
    size += computeBoolSize(10, self.isProvider);
  }
  if (self.hasLisence) {
    size += computeStringSize(11, self.lisence);
  }
  if (self.hasPublishClassType) {
    size += computeStringSize(12, self.publishClassType);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Contact*) parseFromData:(NSData*) data {
  return (Contact*)[[[Contact builder] mergeFromData:data] build];
}
+ (Contact*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Contact*)[[[Contact builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Contact*) parseFromInputStream:(NSInputStream*) input {
  return (Contact*)[[[Contact builder] mergeFromInputStream:input] build];
}
+ (Contact*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Contact*)[[[Contact builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Contact*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Contact*)[[[Contact builder] mergeFromCodedInputStream:input] build];
}
+ (Contact*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Contact*)[[[Contact builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Contact_Builder*) builder {
  return [[[Contact_Builder alloc] init] autorelease];
}
+ (Contact_Builder*) builderWithPrototype:(Contact*) prototype {
  return [[Contact builder] mergeFrom:prototype];
}
- (Contact_Builder*) builder {
  return [Contact builder];
}
@end

BOOL Contact_ContactSourceTypeIsValidValue(Contact_ContactSourceType value) {
  switch (value) {
    case Contact_ContactSourceTypeOrderFrom:
    case Contact_ContactSourceTypeOrderTo:
    case Contact_ContactSourceTypeSubscribeFrom:
    case Contact_ContactSourceTypeSubscribeTo:
      return YES;
    default:
      return NO;
  }
}
@interface Contact_Builder()
@property (retain) Contact* result;
@end

@implementation Contact_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Contact alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Contact_Builder*) clear {
  self.result = [[[Contact alloc] init] autorelease];
  return self;
}
- (Contact_Builder*) clone {
  return [Contact builderWithPrototype:result];
}
- (Contact*) defaultInstance {
  return [Contact defaultInstance];
}
- (Contact*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Contact*) buildPartial {
  Contact* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Contact_Builder*) mergeFrom:(Contact*) other {
  if (other == [Contact defaultInstance]) {
    return self;
  }
  if (other.hasContactId) {
    [self setContactId:other.contactId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasCustomName) {
    [self setCustomName:other.customName];
  }
  if (other.hasPinyin) {
    [self setPinyin:other.pinyin];
  }
  if (other.hasIsBlocked) {
    [self setIsBlocked:other.isBlocked];
  }
  if (other.hasLastContactTime) {
    [self setLastContactTime:other.lastContactTime];
  }
  if (other.hasGender) {
    [self setGender:other.gender];
  }
  if (other.hasSource) {
    [self setSource:other.source];
  }
  if (other.hasTileUrl) {
    [self setTileUrl:other.tileUrl];
  }
  if (other.hasIsProvider) {
    [self setIsProvider:other.isProvider];
  }
  if (other.hasLisence) {
    [self setLisence:other.lisence];
  }
  if (other.hasPublishClassType) {
    [self setPublishClassType:other.publishClassType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Contact_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Contact_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setContactId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setCustomName:[input readString]];
        break;
      }
      case 34: {
        [self setPinyin:[input readString]];
        break;
      }
      case 40: {
        [self setIsBlocked:[input readBool]];
        break;
      }
      case 50: {
        [self setLastContactTime:[input readString]];
        break;
      }
      case 56: {
        [self setGender:[input readInt32]];
        break;
      }
      case 64: {
        [self setSource:[input readInt32]];
        break;
      }
      case 74: {
        [self setTileUrl:[input readString]];
        break;
      }
      case 80: {
        [self setIsProvider:[input readBool]];
        break;
      }
      case 90: {
        [self setLisence:[input readString]];
        break;
      }
      case 98: {
        [self setPublishClassType:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasContactId {
  return result.hasContactId;
}
- (int32_t) contactId {
  return result.contactId;
}
- (Contact_Builder*) setContactId:(int32_t) value {
  result.hasContactId = YES;
  result.contactId = value;
  return self;
}
- (Contact_Builder*) clearContactId {
  result.hasContactId = NO;
  result.contactId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (Contact_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (Contact_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasCustomName {
  return result.hasCustomName;
}
- (NSString*) customName {
  return result.customName;
}
- (Contact_Builder*) setCustomName:(NSString*) value {
  result.hasCustomName = YES;
  result.customName = value;
  return self;
}
- (Contact_Builder*) clearCustomName {
  result.hasCustomName = NO;
  result.customName = @"";
  return self;
}
- (BOOL) hasPinyin {
  return result.hasPinyin;
}
- (NSString*) pinyin {
  return result.pinyin;
}
- (Contact_Builder*) setPinyin:(NSString*) value {
  result.hasPinyin = YES;
  result.pinyin = value;
  return self;
}
- (Contact_Builder*) clearPinyin {
  result.hasPinyin = NO;
  result.pinyin = @"";
  return self;
}
- (BOOL) hasIsBlocked {
  return result.hasIsBlocked;
}
- (BOOL) isBlocked {
  return result.isBlocked;
}
- (Contact_Builder*) setIsBlocked:(BOOL) value {
  result.hasIsBlocked = YES;
  result.isBlocked = value;
  return self;
}
- (Contact_Builder*) clearIsBlocked {
  result.hasIsBlocked = NO;
  result.isBlocked = NO;
  return self;
}
- (BOOL) hasLastContactTime {
  return result.hasLastContactTime;
}
- (NSString*) lastContactTime {
  return result.lastContactTime;
}
- (Contact_Builder*) setLastContactTime:(NSString*) value {
  result.hasLastContactTime = YES;
  result.lastContactTime = value;
  return self;
}
- (Contact_Builder*) clearLastContactTime {
  result.hasLastContactTime = NO;
  result.lastContactTime = @"";
  return self;
}
- (BOOL) hasGender {
  return result.hasGender;
}
- (int32_t) gender {
  return result.gender;
}
- (Contact_Builder*) setGender:(int32_t) value {
  result.hasGender = YES;
  result.gender = value;
  return self;
}
- (Contact_Builder*) clearGender {
  result.hasGender = NO;
  result.gender = 0;
  return self;
}
- (BOOL) hasSource {
  return result.hasSource;
}
- (int32_t) source {
  return result.source;
}
- (Contact_Builder*) setSource:(int32_t) value {
  result.hasSource = YES;
  result.source = value;
  return self;
}
- (Contact_Builder*) clearSource {
  result.hasSource = NO;
  result.source = 0;
  return self;
}
- (BOOL) hasTileUrl {
  return result.hasTileUrl;
}
- (NSString*) tileUrl {
  return result.tileUrl;
}
- (Contact_Builder*) setTileUrl:(NSString*) value {
  result.hasTileUrl = YES;
  result.tileUrl = value;
  return self;
}
- (Contact_Builder*) clearTileUrl {
  result.hasTileUrl = NO;
  result.tileUrl = @"";
  return self;
}
- (BOOL) hasIsProvider {
  return result.hasIsProvider;
}
- (BOOL) isProvider {
  return result.isProvider;
}
- (Contact_Builder*) setIsProvider:(BOOL) value {
  result.hasIsProvider = YES;
  result.isProvider = value;
  return self;
}
- (Contact_Builder*) clearIsProvider {
  result.hasIsProvider = NO;
  result.isProvider = NO;
  return self;
}
- (BOOL) hasLisence {
  return result.hasLisence;
}
- (NSString*) lisence {
  return result.lisence;
}
- (Contact_Builder*) setLisence:(NSString*) value {
  result.hasLisence = YES;
  result.lisence = value;
  return self;
}
- (Contact_Builder*) clearLisence {
  result.hasLisence = NO;
  result.lisence = @"";
  return self;
}
- (BOOL) hasPublishClassType {
  return result.hasPublishClassType;
}
- (NSString*) publishClassType {
  return result.publishClassType;
}
- (Contact_Builder*) setPublishClassType:(NSString*) value {
  result.hasPublishClassType = YES;
  result.publishClassType = value;
  return self;
}
- (Contact_Builder*) clearPublishClassType {
  result.hasPublishClassType = NO;
  result.publishClassType = @"";
  return self;
}
@end

@interface ContactRequest ()
@property (retain) NSString* token;
@property int32_t userId;
@property (retain) NSString* timeStamp;
@end

@implementation ContactRequest

- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) value {
  hasToken_ = !!value;
}
@synthesize token;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasTimeStamp {
  return !!hasTimeStamp_;
}
- (void) setHasTimeStamp:(BOOL) value {
  hasTimeStamp_ = !!value;
}
@synthesize timeStamp;
- (void) dealloc {
  self.token = nil;
  self.timeStamp = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.token = @"";
    self.userId = 0;
    self.timeStamp = @"";
  }
  return self;
}
static ContactRequest* defaultContactRequestInstance = nil;
+ (void) initialize {
  if (self == [ContactRequest class]) {
    defaultContactRequestInstance = [[ContactRequest alloc] init];
  }
}
+ (ContactRequest*) defaultInstance {
  return defaultContactRequestInstance;
}
- (ContactRequest*) defaultInstance {
  return defaultContactRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasToken) {
    [output writeString:1 value:self.token];
  }
  if (self.hasUserId) {
    [output writeInt32:2 value:self.userId];
  }
  if (self.hasTimeStamp) {
    [output writeString:3 value:self.timeStamp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasToken) {
    size += computeStringSize(1, self.token);
  }
  if (self.hasUserId) {
    size += computeInt32Size(2, self.userId);
  }
  if (self.hasTimeStamp) {
    size += computeStringSize(3, self.timeStamp);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ContactRequest*) parseFromData:(NSData*) data {
  return (ContactRequest*)[[[ContactRequest builder] mergeFromData:data] build];
}
+ (ContactRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactRequest*)[[[ContactRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ContactRequest*) parseFromInputStream:(NSInputStream*) input {
  return (ContactRequest*)[[[ContactRequest builder] mergeFromInputStream:input] build];
}
+ (ContactRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactRequest*)[[[ContactRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContactRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ContactRequest*)[[[ContactRequest builder] mergeFromCodedInputStream:input] build];
}
+ (ContactRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactRequest*)[[[ContactRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContactRequest_Builder*) builder {
  return [[[ContactRequest_Builder alloc] init] autorelease];
}
+ (ContactRequest_Builder*) builderWithPrototype:(ContactRequest*) prototype {
  return [[ContactRequest builder] mergeFrom:prototype];
}
- (ContactRequest_Builder*) builder {
  return [ContactRequest builder];
}
@end

@interface ContactRequest_Builder()
@property (retain) ContactRequest* result;
@end

@implementation ContactRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ContactRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ContactRequest_Builder*) clear {
  self.result = [[[ContactRequest alloc] init] autorelease];
  return self;
}
- (ContactRequest_Builder*) clone {
  return [ContactRequest builderWithPrototype:result];
}
- (ContactRequest*) defaultInstance {
  return [ContactRequest defaultInstance];
}
- (ContactRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ContactRequest*) buildPartial {
  ContactRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ContactRequest_Builder*) mergeFrom:(ContactRequest*) other {
  if (other == [ContactRequest defaultInstance]) {
    return self;
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasTimeStamp) {
    [self setTimeStamp:other.timeStamp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ContactRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ContactRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setToken:[input readString]];
        break;
      }
      case 16: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 26: {
        [self setTimeStamp:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasToken {
  return result.hasToken;
}
- (NSString*) token {
  return result.token;
}
- (ContactRequest_Builder*) setToken:(NSString*) value {
  result.hasToken = YES;
  result.token = value;
  return self;
}
- (ContactRequest_Builder*) clearToken {
  result.hasToken = NO;
  result.token = @"";
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (ContactRequest_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (ContactRequest_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasTimeStamp {
  return result.hasTimeStamp;
}
- (NSString*) timeStamp {
  return result.timeStamp;
}
- (ContactRequest_Builder*) setTimeStamp:(NSString*) value {
  result.hasTimeStamp = YES;
  result.timeStamp = value;
  return self;
}
- (ContactRequest_Builder*) clearTimeStamp {
  result.hasTimeStamp = NO;
  result.timeStamp = @"";
  return self;
}
@end

@interface ContactResponse ()
@property BOOL isSucceed;
@property (retain) NSMutableArray* mutableContactsList;
@property (retain) NSString* timeStamp;
@end

@implementation ContactResponse

- (BOOL) hasIsSucceed {
  return !!hasIsSucceed_;
}
- (void) setHasIsSucceed:(BOOL) value {
  hasIsSucceed_ = !!value;
}
- (BOOL) isSucceed {
  return !!isSucceed_;
}
- (void) setIsSucceed:(BOOL) value {
  isSucceed_ = !!value;
}
@synthesize mutableContactsList;
- (BOOL) hasTimeStamp {
  return !!hasTimeStamp_;
}
- (void) setHasTimeStamp:(BOOL) value {
  hasTimeStamp_ = !!value;
}
@synthesize timeStamp;
- (void) dealloc {
  self.mutableContactsList = nil;
  self.timeStamp = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.isSucceed = NO;
    self.timeStamp = @"";
  }
  return self;
}
static ContactResponse* defaultContactResponseInstance = nil;
+ (void) initialize {
  if (self == [ContactResponse class]) {
    defaultContactResponseInstance = [[ContactResponse alloc] init];
  }
}
+ (ContactResponse*) defaultInstance {
  return defaultContactResponseInstance;
}
- (ContactResponse*) defaultInstance {
  return defaultContactResponseInstance;
}
- (NSArray*) contactsList {
  return mutableContactsList;
}
- (Contact*) contactsAtIndex:(int32_t) index {
  id value = [mutableContactsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsSucceed) {
    [output writeBool:1 value:self.isSucceed];
  }
  for (Contact* element in self.contactsList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasTimeStamp) {
    [output writeString:3 value:self.timeStamp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasIsSucceed) {
    size += computeBoolSize(1, self.isSucceed);
  }
  for (Contact* element in self.contactsList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasTimeStamp) {
    size += computeStringSize(3, self.timeStamp);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ContactResponse*) parseFromData:(NSData*) data {
  return (ContactResponse*)[[[ContactResponse builder] mergeFromData:data] build];
}
+ (ContactResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactResponse*)[[[ContactResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ContactResponse*) parseFromInputStream:(NSInputStream*) input {
  return (ContactResponse*)[[[ContactResponse builder] mergeFromInputStream:input] build];
}
+ (ContactResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactResponse*)[[[ContactResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContactResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ContactResponse*)[[[ContactResponse builder] mergeFromCodedInputStream:input] build];
}
+ (ContactResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactResponse*)[[[ContactResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContactResponse_Builder*) builder {
  return [[[ContactResponse_Builder alloc] init] autorelease];
}
+ (ContactResponse_Builder*) builderWithPrototype:(ContactResponse*) prototype {
  return [[ContactResponse builder] mergeFrom:prototype];
}
- (ContactResponse_Builder*) builder {
  return [ContactResponse builder];
}
@end

@interface ContactResponse_Builder()
@property (retain) ContactResponse* result;
@end

@implementation ContactResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ContactResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ContactResponse_Builder*) clear {
  self.result = [[[ContactResponse alloc] init] autorelease];
  return self;
}
- (ContactResponse_Builder*) clone {
  return [ContactResponse builderWithPrototype:result];
}
- (ContactResponse*) defaultInstance {
  return [ContactResponse defaultInstance];
}
- (ContactResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ContactResponse*) buildPartial {
  ContactResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ContactResponse_Builder*) mergeFrom:(ContactResponse*) other {
  if (other == [ContactResponse defaultInstance]) {
    return self;
  }
  if (other.hasIsSucceed) {
    [self setIsSucceed:other.isSucceed];
  }
  if (other.mutableContactsList.count > 0) {
    if (result.mutableContactsList == nil) {
      result.mutableContactsList = [NSMutableArray array];
    }
    [result.mutableContactsList addObjectsFromArray:other.mutableContactsList];
  }
  if (other.hasTimeStamp) {
    [self setTimeStamp:other.timeStamp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ContactResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ContactResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIsSucceed:[input readBool]];
        break;
      }
      case 18: {
        Contact_Builder* subBuilder = [Contact builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addContacts:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        [self setTimeStamp:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasIsSucceed {
  return result.hasIsSucceed;
}
- (BOOL) isSucceed {
  return result.isSucceed;
}
- (ContactResponse_Builder*) setIsSucceed:(BOOL) value {
  result.hasIsSucceed = YES;
  result.isSucceed = value;
  return self;
}
- (ContactResponse_Builder*) clearIsSucceed {
  result.hasIsSucceed = NO;
  result.isSucceed = NO;
  return self;
}
- (NSArray*) contactsList {
  if (result.mutableContactsList == nil) { return [NSArray array]; }
  return result.mutableContactsList;
}
- (Contact*) contactsAtIndex:(int32_t) index {
  return [result contactsAtIndex:index];
}
- (ContactResponse_Builder*) replaceContactsAtIndex:(int32_t) index with:(Contact*) value {
  [result.mutableContactsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (ContactResponse_Builder*) addAllContacts:(NSArray*) values {
  if (result.mutableContactsList == nil) {
    result.mutableContactsList = [NSMutableArray array];
  }
  [result.mutableContactsList addObjectsFromArray:values];
  return self;
}
- (ContactResponse_Builder*) clearContactsList {
  result.mutableContactsList = nil;
  return self;
}
- (ContactResponse_Builder*) addContacts:(Contact*) value {
  if (result.mutableContactsList == nil) {
    result.mutableContactsList = [NSMutableArray array];
  }
  [result.mutableContactsList addObject:value];
  return self;
}
- (BOOL) hasTimeStamp {
  return result.hasTimeStamp;
}
- (NSString*) timeStamp {
  return result.timeStamp;
}
- (ContactResponse_Builder*) setTimeStamp:(NSString*) value {
  result.hasTimeStamp = YES;
  result.timeStamp = value;
  return self;
}
- (ContactResponse_Builder*) clearTimeStamp {
  result.hasTimeStamp = NO;
  result.timeStamp = @"";
  return self;
}
@end

@interface BlockContactRequest ()
@property (retain) NSString* token;
@property int32_t userId;
@property int32_t contactId;
@property BOOL isBlocked;
@end

@implementation BlockContactRequest

- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) value {
  hasToken_ = !!value;
}
@synthesize token;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasContactId {
  return !!hasContactId_;
}
- (void) setHasContactId:(BOOL) value {
  hasContactId_ = !!value;
}
@synthesize contactId;
- (BOOL) hasIsBlocked {
  return !!hasIsBlocked_;
}
- (void) setHasIsBlocked:(BOOL) value {
  hasIsBlocked_ = !!value;
}
- (BOOL) isBlocked {
  return !!isBlocked_;
}
- (void) setIsBlocked:(BOOL) value {
  isBlocked_ = !!value;
}
- (void) dealloc {
  self.token = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.token = @"";
    self.userId = 0;
    self.contactId = 0;
    self.isBlocked = NO;
  }
  return self;
}
static BlockContactRequest* defaultBlockContactRequestInstance = nil;
+ (void) initialize {
  if (self == [BlockContactRequest class]) {
    defaultBlockContactRequestInstance = [[BlockContactRequest alloc] init];
  }
}
+ (BlockContactRequest*) defaultInstance {
  return defaultBlockContactRequestInstance;
}
- (BlockContactRequest*) defaultInstance {
  return defaultBlockContactRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasToken) {
    [output writeString:1 value:self.token];
  }
  if (self.hasUserId) {
    [output writeInt32:2 value:self.userId];
  }
  if (self.hasContactId) {
    [output writeInt32:3 value:self.contactId];
  }
  if (self.hasIsBlocked) {
    [output writeBool:4 value:self.isBlocked];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasToken) {
    size += computeStringSize(1, self.token);
  }
  if (self.hasUserId) {
    size += computeInt32Size(2, self.userId);
  }
  if (self.hasContactId) {
    size += computeInt32Size(3, self.contactId);
  }
  if (self.hasIsBlocked) {
    size += computeBoolSize(4, self.isBlocked);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BlockContactRequest*) parseFromData:(NSData*) data {
  return (BlockContactRequest*)[[[BlockContactRequest builder] mergeFromData:data] build];
}
+ (BlockContactRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BlockContactRequest*)[[[BlockContactRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BlockContactRequest*) parseFromInputStream:(NSInputStream*) input {
  return (BlockContactRequest*)[[[BlockContactRequest builder] mergeFromInputStream:input] build];
}
+ (BlockContactRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BlockContactRequest*)[[[BlockContactRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BlockContactRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BlockContactRequest*)[[[BlockContactRequest builder] mergeFromCodedInputStream:input] build];
}
+ (BlockContactRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BlockContactRequest*)[[[BlockContactRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BlockContactRequest_Builder*) builder {
  return [[[BlockContactRequest_Builder alloc] init] autorelease];
}
+ (BlockContactRequest_Builder*) builderWithPrototype:(BlockContactRequest*) prototype {
  return [[BlockContactRequest builder] mergeFrom:prototype];
}
- (BlockContactRequest_Builder*) builder {
  return [BlockContactRequest builder];
}
@end

@interface BlockContactRequest_Builder()
@property (retain) BlockContactRequest* result;
@end

@implementation BlockContactRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BlockContactRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BlockContactRequest_Builder*) clear {
  self.result = [[[BlockContactRequest alloc] init] autorelease];
  return self;
}
- (BlockContactRequest_Builder*) clone {
  return [BlockContactRequest builderWithPrototype:result];
}
- (BlockContactRequest*) defaultInstance {
  return [BlockContactRequest defaultInstance];
}
- (BlockContactRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BlockContactRequest*) buildPartial {
  BlockContactRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BlockContactRequest_Builder*) mergeFrom:(BlockContactRequest*) other {
  if (other == [BlockContactRequest defaultInstance]) {
    return self;
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasContactId) {
    [self setContactId:other.contactId];
  }
  if (other.hasIsBlocked) {
    [self setIsBlocked:other.isBlocked];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BlockContactRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BlockContactRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setToken:[input readString]];
        break;
      }
      case 16: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 24: {
        [self setContactId:[input readInt32]];
        break;
      }
      case 32: {
        [self setIsBlocked:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasToken {
  return result.hasToken;
}
- (NSString*) token {
  return result.token;
}
- (BlockContactRequest_Builder*) setToken:(NSString*) value {
  result.hasToken = YES;
  result.token = value;
  return self;
}
- (BlockContactRequest_Builder*) clearToken {
  result.hasToken = NO;
  result.token = @"";
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (BlockContactRequest_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (BlockContactRequest_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasContactId {
  return result.hasContactId;
}
- (int32_t) contactId {
  return result.contactId;
}
- (BlockContactRequest_Builder*) setContactId:(int32_t) value {
  result.hasContactId = YES;
  result.contactId = value;
  return self;
}
- (BlockContactRequest_Builder*) clearContactId {
  result.hasContactId = NO;
  result.contactId = 0;
  return self;
}
- (BOOL) hasIsBlocked {
  return result.hasIsBlocked;
}
- (BOOL) isBlocked {
  return result.isBlocked;
}
- (BlockContactRequest_Builder*) setIsBlocked:(BOOL) value {
  result.hasIsBlocked = YES;
  result.isBlocked = value;
  return self;
}
- (BlockContactRequest_Builder*) clearIsBlocked {
  result.hasIsBlocked = NO;
  result.isBlocked = NO;
  return self;
}
@end

@interface BlockContactResponse ()
@property BOOL isSucceed;
@property int32_t contactId;
@property BOOL isBlocked;
@end

@implementation BlockContactResponse

- (BOOL) hasIsSucceed {
  return !!hasIsSucceed_;
}
- (void) setHasIsSucceed:(BOOL) value {
  hasIsSucceed_ = !!value;
}
- (BOOL) isSucceed {
  return !!isSucceed_;
}
- (void) setIsSucceed:(BOOL) value {
  isSucceed_ = !!value;
}
- (BOOL) hasContactId {
  return !!hasContactId_;
}
- (void) setHasContactId:(BOOL) value {
  hasContactId_ = !!value;
}
@synthesize contactId;
- (BOOL) hasIsBlocked {
  return !!hasIsBlocked_;
}
- (void) setHasIsBlocked:(BOOL) value {
  hasIsBlocked_ = !!value;
}
- (BOOL) isBlocked {
  return !!isBlocked_;
}
- (void) setIsBlocked:(BOOL) value {
  isBlocked_ = !!value;
}
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.isSucceed = NO;
    self.contactId = 0;
    self.isBlocked = NO;
  }
  return self;
}
static BlockContactResponse* defaultBlockContactResponseInstance = nil;
+ (void) initialize {
  if (self == [BlockContactResponse class]) {
    defaultBlockContactResponseInstance = [[BlockContactResponse alloc] init];
  }
}
+ (BlockContactResponse*) defaultInstance {
  return defaultBlockContactResponseInstance;
}
- (BlockContactResponse*) defaultInstance {
  return defaultBlockContactResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsSucceed) {
    [output writeBool:1 value:self.isSucceed];
  }
  if (self.hasContactId) {
    [output writeInt32:2 value:self.contactId];
  }
  if (self.hasIsBlocked) {
    [output writeBool:3 value:self.isBlocked];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasIsSucceed) {
    size += computeBoolSize(1, self.isSucceed);
  }
  if (self.hasContactId) {
    size += computeInt32Size(2, self.contactId);
  }
  if (self.hasIsBlocked) {
    size += computeBoolSize(3, self.isBlocked);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BlockContactResponse*) parseFromData:(NSData*) data {
  return (BlockContactResponse*)[[[BlockContactResponse builder] mergeFromData:data] build];
}
+ (BlockContactResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BlockContactResponse*)[[[BlockContactResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BlockContactResponse*) parseFromInputStream:(NSInputStream*) input {
  return (BlockContactResponse*)[[[BlockContactResponse builder] mergeFromInputStream:input] build];
}
+ (BlockContactResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BlockContactResponse*)[[[BlockContactResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BlockContactResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BlockContactResponse*)[[[BlockContactResponse builder] mergeFromCodedInputStream:input] build];
}
+ (BlockContactResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BlockContactResponse*)[[[BlockContactResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BlockContactResponse_Builder*) builder {
  return [[[BlockContactResponse_Builder alloc] init] autorelease];
}
+ (BlockContactResponse_Builder*) builderWithPrototype:(BlockContactResponse*) prototype {
  return [[BlockContactResponse builder] mergeFrom:prototype];
}
- (BlockContactResponse_Builder*) builder {
  return [BlockContactResponse builder];
}
@end

@interface BlockContactResponse_Builder()
@property (retain) BlockContactResponse* result;
@end

@implementation BlockContactResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BlockContactResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BlockContactResponse_Builder*) clear {
  self.result = [[[BlockContactResponse alloc] init] autorelease];
  return self;
}
- (BlockContactResponse_Builder*) clone {
  return [BlockContactResponse builderWithPrototype:result];
}
- (BlockContactResponse*) defaultInstance {
  return [BlockContactResponse defaultInstance];
}
- (BlockContactResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BlockContactResponse*) buildPartial {
  BlockContactResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BlockContactResponse_Builder*) mergeFrom:(BlockContactResponse*) other {
  if (other == [BlockContactResponse defaultInstance]) {
    return self;
  }
  if (other.hasIsSucceed) {
    [self setIsSucceed:other.isSucceed];
  }
  if (other.hasContactId) {
    [self setContactId:other.contactId];
  }
  if (other.hasIsBlocked) {
    [self setIsBlocked:other.isBlocked];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BlockContactResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BlockContactResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIsSucceed:[input readBool]];
        break;
      }
      case 16: {
        [self setContactId:[input readInt32]];
        break;
      }
      case 24: {
        [self setIsBlocked:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasIsSucceed {
  return result.hasIsSucceed;
}
- (BOOL) isSucceed {
  return result.isSucceed;
}
- (BlockContactResponse_Builder*) setIsSucceed:(BOOL) value {
  result.hasIsSucceed = YES;
  result.isSucceed = value;
  return self;
}
- (BlockContactResponse_Builder*) clearIsSucceed {
  result.hasIsSucceed = NO;
  result.isSucceed = NO;
  return self;
}
- (BOOL) hasContactId {
  return result.hasContactId;
}
- (int32_t) contactId {
  return result.contactId;
}
- (BlockContactResponse_Builder*) setContactId:(int32_t) value {
  result.hasContactId = YES;
  result.contactId = value;
  return self;
}
- (BlockContactResponse_Builder*) clearContactId {
  result.hasContactId = NO;
  result.contactId = 0;
  return self;
}
- (BOOL) hasIsBlocked {
  return result.hasIsBlocked;
}
- (BOOL) isBlocked {
  return result.isBlocked;
}
- (BlockContactResponse_Builder*) setIsBlocked:(BOOL) value {
  result.hasIsBlocked = YES;
  result.isBlocked = value;
  return self;
}
- (BlockContactResponse_Builder*) clearIsBlocked {
  result.hasIsBlocked = NO;
  result.isBlocked = NO;
  return self;
}
@end

@interface ContactDetailRequest ()
@property (retain) NSString* token;
@property int32_t userId;
@property int32_t contactId;
@end

@implementation ContactDetailRequest

- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) value {
  hasToken_ = !!value;
}
@synthesize token;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasContactId {
  return !!hasContactId_;
}
- (void) setHasContactId:(BOOL) value {
  hasContactId_ = !!value;
}
@synthesize contactId;
- (void) dealloc {
  self.token = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.token = @"";
    self.userId = 0;
    self.contactId = 0;
  }
  return self;
}
static ContactDetailRequest* defaultContactDetailRequestInstance = nil;
+ (void) initialize {
  if (self == [ContactDetailRequest class]) {
    defaultContactDetailRequestInstance = [[ContactDetailRequest alloc] init];
  }
}
+ (ContactDetailRequest*) defaultInstance {
  return defaultContactDetailRequestInstance;
}
- (ContactDetailRequest*) defaultInstance {
  return defaultContactDetailRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasToken) {
    [output writeString:1 value:self.token];
  }
  if (self.hasUserId) {
    [output writeInt32:2 value:self.userId];
  }
  if (self.hasContactId) {
    [output writeInt32:3 value:self.contactId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasToken) {
    size += computeStringSize(1, self.token);
  }
  if (self.hasUserId) {
    size += computeInt32Size(2, self.userId);
  }
  if (self.hasContactId) {
    size += computeInt32Size(3, self.contactId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ContactDetailRequest*) parseFromData:(NSData*) data {
  return (ContactDetailRequest*)[[[ContactDetailRequest builder] mergeFromData:data] build];
}
+ (ContactDetailRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactDetailRequest*)[[[ContactDetailRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ContactDetailRequest*) parseFromInputStream:(NSInputStream*) input {
  return (ContactDetailRequest*)[[[ContactDetailRequest builder] mergeFromInputStream:input] build];
}
+ (ContactDetailRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactDetailRequest*)[[[ContactDetailRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContactDetailRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ContactDetailRequest*)[[[ContactDetailRequest builder] mergeFromCodedInputStream:input] build];
}
+ (ContactDetailRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactDetailRequest*)[[[ContactDetailRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContactDetailRequest_Builder*) builder {
  return [[[ContactDetailRequest_Builder alloc] init] autorelease];
}
+ (ContactDetailRequest_Builder*) builderWithPrototype:(ContactDetailRequest*) prototype {
  return [[ContactDetailRequest builder] mergeFrom:prototype];
}
- (ContactDetailRequest_Builder*) builder {
  return [ContactDetailRequest builder];
}
@end

@interface ContactDetailRequest_Builder()
@property (retain) ContactDetailRequest* result;
@end

@implementation ContactDetailRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ContactDetailRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ContactDetailRequest_Builder*) clear {
  self.result = [[[ContactDetailRequest alloc] init] autorelease];
  return self;
}
- (ContactDetailRequest_Builder*) clone {
  return [ContactDetailRequest builderWithPrototype:result];
}
- (ContactDetailRequest*) defaultInstance {
  return [ContactDetailRequest defaultInstance];
}
- (ContactDetailRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ContactDetailRequest*) buildPartial {
  ContactDetailRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ContactDetailRequest_Builder*) mergeFrom:(ContactDetailRequest*) other {
  if (other == [ContactDetailRequest defaultInstance]) {
    return self;
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasContactId) {
    [self setContactId:other.contactId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ContactDetailRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ContactDetailRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setToken:[input readString]];
        break;
      }
      case 16: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 24: {
        [self setContactId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasToken {
  return result.hasToken;
}
- (NSString*) token {
  return result.token;
}
- (ContactDetailRequest_Builder*) setToken:(NSString*) value {
  result.hasToken = YES;
  result.token = value;
  return self;
}
- (ContactDetailRequest_Builder*) clearToken {
  result.hasToken = NO;
  result.token = @"";
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (ContactDetailRequest_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (ContactDetailRequest_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasContactId {
  return result.hasContactId;
}
- (int32_t) contactId {
  return result.contactId;
}
- (ContactDetailRequest_Builder*) setContactId:(int32_t) value {
  result.hasContactId = YES;
  result.contactId = value;
  return self;
}
- (ContactDetailRequest_Builder*) clearContactId {
  result.hasContactId = NO;
  result.contactId = 0;
  return self;
}
@end

@interface ContactDetailResponse ()
@property BOOL isSucceed;
@property (retain) Contact* contact;
@end

@implementation ContactDetailResponse

- (BOOL) hasIsSucceed {
  return !!hasIsSucceed_;
}
- (void) setHasIsSucceed:(BOOL) value {
  hasIsSucceed_ = !!value;
}
- (BOOL) isSucceed {
  return !!isSucceed_;
}
- (void) setIsSucceed:(BOOL) value {
  isSucceed_ = !!value;
}
- (BOOL) hasContact {
  return !!hasContact_;
}
- (void) setHasContact:(BOOL) value {
  hasContact_ = !!value;
}
@synthesize contact;
- (void) dealloc {
  self.contact = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.isSucceed = NO;
    self.contact = [Contact defaultInstance];
  }
  return self;
}
static ContactDetailResponse* defaultContactDetailResponseInstance = nil;
+ (void) initialize {
  if (self == [ContactDetailResponse class]) {
    defaultContactDetailResponseInstance = [[ContactDetailResponse alloc] init];
  }
}
+ (ContactDetailResponse*) defaultInstance {
  return defaultContactDetailResponseInstance;
}
- (ContactDetailResponse*) defaultInstance {
  return defaultContactDetailResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsSucceed) {
    [output writeBool:1 value:self.isSucceed];
  }
  if (self.hasContact) {
    [output writeMessage:2 value:self.contact];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasIsSucceed) {
    size += computeBoolSize(1, self.isSucceed);
  }
  if (self.hasContact) {
    size += computeMessageSize(2, self.contact);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ContactDetailResponse*) parseFromData:(NSData*) data {
  return (ContactDetailResponse*)[[[ContactDetailResponse builder] mergeFromData:data] build];
}
+ (ContactDetailResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactDetailResponse*)[[[ContactDetailResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ContactDetailResponse*) parseFromInputStream:(NSInputStream*) input {
  return (ContactDetailResponse*)[[[ContactDetailResponse builder] mergeFromInputStream:input] build];
}
+ (ContactDetailResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactDetailResponse*)[[[ContactDetailResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContactDetailResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ContactDetailResponse*)[[[ContactDetailResponse builder] mergeFromCodedInputStream:input] build];
}
+ (ContactDetailResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactDetailResponse*)[[[ContactDetailResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContactDetailResponse_Builder*) builder {
  return [[[ContactDetailResponse_Builder alloc] init] autorelease];
}
+ (ContactDetailResponse_Builder*) builderWithPrototype:(ContactDetailResponse*) prototype {
  return [[ContactDetailResponse builder] mergeFrom:prototype];
}
- (ContactDetailResponse_Builder*) builder {
  return [ContactDetailResponse builder];
}
@end

@interface ContactDetailResponse_Builder()
@property (retain) ContactDetailResponse* result;
@end

@implementation ContactDetailResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ContactDetailResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ContactDetailResponse_Builder*) clear {
  self.result = [[[ContactDetailResponse alloc] init] autorelease];
  return self;
}
- (ContactDetailResponse_Builder*) clone {
  return [ContactDetailResponse builderWithPrototype:result];
}
- (ContactDetailResponse*) defaultInstance {
  return [ContactDetailResponse defaultInstance];
}
- (ContactDetailResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ContactDetailResponse*) buildPartial {
  ContactDetailResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ContactDetailResponse_Builder*) mergeFrom:(ContactDetailResponse*) other {
  if (other == [ContactDetailResponse defaultInstance]) {
    return self;
  }
  if (other.hasIsSucceed) {
    [self setIsSucceed:other.isSucceed];
  }
  if (other.hasContact) {
    [self mergeContact:other.contact];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ContactDetailResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ContactDetailResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIsSucceed:[input readBool]];
        break;
      }
      case 18: {
        Contact_Builder* subBuilder = [Contact builder];
        if (self.hasContact) {
          [subBuilder mergeFrom:self.contact];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setContact:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasIsSucceed {
  return result.hasIsSucceed;
}
- (BOOL) isSucceed {
  return result.isSucceed;
}
- (ContactDetailResponse_Builder*) setIsSucceed:(BOOL) value {
  result.hasIsSucceed = YES;
  result.isSucceed = value;
  return self;
}
- (ContactDetailResponse_Builder*) clearIsSucceed {
  result.hasIsSucceed = NO;
  result.isSucceed = NO;
  return self;
}
- (BOOL) hasContact {
  return result.hasContact;
}
- (Contact*) contact {
  return result.contact;
}
- (ContactDetailResponse_Builder*) setContact:(Contact*) value {
  result.hasContact = YES;
  result.contact = value;
  return self;
}
- (ContactDetailResponse_Builder*) setContactBuilder:(Contact_Builder*) builderForValue {
  return [self setContact:[builderForValue build]];
}
- (ContactDetailResponse_Builder*) mergeContact:(Contact*) value {
  if (result.hasContact &&
      result.contact != [Contact defaultInstance]) {
    result.contact =
      [[[Contact builderWithPrototype:result.contact] mergeFrom:value] buildPartial];
  } else {
    result.contact = value;
  }
  result.hasContact = YES;
  return self;
}
- (ContactDetailResponse_Builder*) clearContact {
  result.hasContact = NO;
  result.contact = [Contact defaultInstance];
  return self;
}
@end

@interface ChangeContactDetailRequest ()
@property (retain) NSString* token;
@property int32_t userId;
@property (retain) Contact* contact;
@end

@implementation ChangeContactDetailRequest

- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) value {
  hasToken_ = !!value;
}
@synthesize token;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasContact {
  return !!hasContact_;
}
- (void) setHasContact:(BOOL) value {
  hasContact_ = !!value;
}
@synthesize contact;
- (void) dealloc {
  self.token = nil;
  self.contact = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.token = @"";
    self.userId = 0;
    self.contact = [Contact defaultInstance];
  }
  return self;
}
static ChangeContactDetailRequest* defaultChangeContactDetailRequestInstance = nil;
+ (void) initialize {
  if (self == [ChangeContactDetailRequest class]) {
    defaultChangeContactDetailRequestInstance = [[ChangeContactDetailRequest alloc] init];
  }
}
+ (ChangeContactDetailRequest*) defaultInstance {
  return defaultChangeContactDetailRequestInstance;
}
- (ChangeContactDetailRequest*) defaultInstance {
  return defaultChangeContactDetailRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasToken) {
    [output writeString:1 value:self.token];
  }
  if (self.hasUserId) {
    [output writeInt32:2 value:self.userId];
  }
  if (self.hasContact) {
    [output writeMessage:3 value:self.contact];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasToken) {
    size += computeStringSize(1, self.token);
  }
  if (self.hasUserId) {
    size += computeInt32Size(2, self.userId);
  }
  if (self.hasContact) {
    size += computeMessageSize(3, self.contact);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ChangeContactDetailRequest*) parseFromData:(NSData*) data {
  return (ChangeContactDetailRequest*)[[[ChangeContactDetailRequest builder] mergeFromData:data] build];
}
+ (ChangeContactDetailRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeContactDetailRequest*)[[[ChangeContactDetailRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ChangeContactDetailRequest*) parseFromInputStream:(NSInputStream*) input {
  return (ChangeContactDetailRequest*)[[[ChangeContactDetailRequest builder] mergeFromInputStream:input] build];
}
+ (ChangeContactDetailRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeContactDetailRequest*)[[[ChangeContactDetailRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeContactDetailRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ChangeContactDetailRequest*)[[[ChangeContactDetailRequest builder] mergeFromCodedInputStream:input] build];
}
+ (ChangeContactDetailRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeContactDetailRequest*)[[[ChangeContactDetailRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeContactDetailRequest_Builder*) builder {
  return [[[ChangeContactDetailRequest_Builder alloc] init] autorelease];
}
+ (ChangeContactDetailRequest_Builder*) builderWithPrototype:(ChangeContactDetailRequest*) prototype {
  return [[ChangeContactDetailRequest builder] mergeFrom:prototype];
}
- (ChangeContactDetailRequest_Builder*) builder {
  return [ChangeContactDetailRequest builder];
}
@end

@interface ChangeContactDetailRequest_Builder()
@property (retain) ChangeContactDetailRequest* result;
@end

@implementation ChangeContactDetailRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ChangeContactDetailRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ChangeContactDetailRequest_Builder*) clear {
  self.result = [[[ChangeContactDetailRequest alloc] init] autorelease];
  return self;
}
- (ChangeContactDetailRequest_Builder*) clone {
  return [ChangeContactDetailRequest builderWithPrototype:result];
}
- (ChangeContactDetailRequest*) defaultInstance {
  return [ChangeContactDetailRequest defaultInstance];
}
- (ChangeContactDetailRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ChangeContactDetailRequest*) buildPartial {
  ChangeContactDetailRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ChangeContactDetailRequest_Builder*) mergeFrom:(ChangeContactDetailRequest*) other {
  if (other == [ChangeContactDetailRequest defaultInstance]) {
    return self;
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasContact) {
    [self mergeContact:other.contact];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChangeContactDetailRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChangeContactDetailRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setToken:[input readString]];
        break;
      }
      case 16: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 26: {
        Contact_Builder* subBuilder = [Contact builder];
        if (self.hasContact) {
          [subBuilder mergeFrom:self.contact];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setContact:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasToken {
  return result.hasToken;
}
- (NSString*) token {
  return result.token;
}
- (ChangeContactDetailRequest_Builder*) setToken:(NSString*) value {
  result.hasToken = YES;
  result.token = value;
  return self;
}
- (ChangeContactDetailRequest_Builder*) clearToken {
  result.hasToken = NO;
  result.token = @"";
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (ChangeContactDetailRequest_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (ChangeContactDetailRequest_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasContact {
  return result.hasContact;
}
- (Contact*) contact {
  return result.contact;
}
- (ChangeContactDetailRequest_Builder*) setContact:(Contact*) value {
  result.hasContact = YES;
  result.contact = value;
  return self;
}
- (ChangeContactDetailRequest_Builder*) setContactBuilder:(Contact_Builder*) builderForValue {
  return [self setContact:[builderForValue build]];
}
- (ChangeContactDetailRequest_Builder*) mergeContact:(Contact*) value {
  if (result.hasContact &&
      result.contact != [Contact defaultInstance]) {
    result.contact =
      [[[Contact builderWithPrototype:result.contact] mergeFrom:value] buildPartial];
  } else {
    result.contact = value;
  }
  result.hasContact = YES;
  return self;
}
- (ChangeContactDetailRequest_Builder*) clearContact {
  result.hasContact = NO;
  result.contact = [Contact defaultInstance];
  return self;
}
@end

@interface ChangeContactDetailResponse ()
@property BOOL isSucceed;
@property (retain) Contact* contact;
@end

@implementation ChangeContactDetailResponse

- (BOOL) hasIsSucceed {
  return !!hasIsSucceed_;
}
- (void) setHasIsSucceed:(BOOL) value {
  hasIsSucceed_ = !!value;
}
- (BOOL) isSucceed {
  return !!isSucceed_;
}
- (void) setIsSucceed:(BOOL) value {
  isSucceed_ = !!value;
}
- (BOOL) hasContact {
  return !!hasContact_;
}
- (void) setHasContact:(BOOL) value {
  hasContact_ = !!value;
}
@synthesize contact;
- (void) dealloc {
  self.contact = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.isSucceed = NO;
    self.contact = [Contact defaultInstance];
  }
  return self;
}
static ChangeContactDetailResponse* defaultChangeContactDetailResponseInstance = nil;
+ (void) initialize {
  if (self == [ChangeContactDetailResponse class]) {
    defaultChangeContactDetailResponseInstance = [[ChangeContactDetailResponse alloc] init];
  }
}
+ (ChangeContactDetailResponse*) defaultInstance {
  return defaultChangeContactDetailResponseInstance;
}
- (ChangeContactDetailResponse*) defaultInstance {
  return defaultChangeContactDetailResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsSucceed) {
    [output writeBool:1 value:self.isSucceed];
  }
  if (self.hasContact) {
    [output writeMessage:2 value:self.contact];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasIsSucceed) {
    size += computeBoolSize(1, self.isSucceed);
  }
  if (self.hasContact) {
    size += computeMessageSize(2, self.contact);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ChangeContactDetailResponse*) parseFromData:(NSData*) data {
  return (ChangeContactDetailResponse*)[[[ChangeContactDetailResponse builder] mergeFromData:data] build];
}
+ (ChangeContactDetailResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeContactDetailResponse*)[[[ChangeContactDetailResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ChangeContactDetailResponse*) parseFromInputStream:(NSInputStream*) input {
  return (ChangeContactDetailResponse*)[[[ChangeContactDetailResponse builder] mergeFromInputStream:input] build];
}
+ (ChangeContactDetailResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeContactDetailResponse*)[[[ChangeContactDetailResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeContactDetailResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ChangeContactDetailResponse*)[[[ChangeContactDetailResponse builder] mergeFromCodedInputStream:input] build];
}
+ (ChangeContactDetailResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeContactDetailResponse*)[[[ChangeContactDetailResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeContactDetailResponse_Builder*) builder {
  return [[[ChangeContactDetailResponse_Builder alloc] init] autorelease];
}
+ (ChangeContactDetailResponse_Builder*) builderWithPrototype:(ChangeContactDetailResponse*) prototype {
  return [[ChangeContactDetailResponse builder] mergeFrom:prototype];
}
- (ChangeContactDetailResponse_Builder*) builder {
  return [ChangeContactDetailResponse builder];
}
@end

@interface ChangeContactDetailResponse_Builder()
@property (retain) ChangeContactDetailResponse* result;
@end

@implementation ChangeContactDetailResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ChangeContactDetailResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ChangeContactDetailResponse_Builder*) clear {
  self.result = [[[ChangeContactDetailResponse alloc] init] autorelease];
  return self;
}
- (ChangeContactDetailResponse_Builder*) clone {
  return [ChangeContactDetailResponse builderWithPrototype:result];
}
- (ChangeContactDetailResponse*) defaultInstance {
  return [ChangeContactDetailResponse defaultInstance];
}
- (ChangeContactDetailResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ChangeContactDetailResponse*) buildPartial {
  ChangeContactDetailResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ChangeContactDetailResponse_Builder*) mergeFrom:(ChangeContactDetailResponse*) other {
  if (other == [ChangeContactDetailResponse defaultInstance]) {
    return self;
  }
  if (other.hasIsSucceed) {
    [self setIsSucceed:other.isSucceed];
  }
  if (other.hasContact) {
    [self mergeContact:other.contact];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChangeContactDetailResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChangeContactDetailResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIsSucceed:[input readBool]];
        break;
      }
      case 18: {
        Contact_Builder* subBuilder = [Contact builder];
        if (self.hasContact) {
          [subBuilder mergeFrom:self.contact];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setContact:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasIsSucceed {
  return result.hasIsSucceed;
}
- (BOOL) isSucceed {
  return result.isSucceed;
}
- (ChangeContactDetailResponse_Builder*) setIsSucceed:(BOOL) value {
  result.hasIsSucceed = YES;
  result.isSucceed = value;
  return self;
}
- (ChangeContactDetailResponse_Builder*) clearIsSucceed {
  result.hasIsSucceed = NO;
  result.isSucceed = NO;
  return self;
}
- (BOOL) hasContact {
  return result.hasContact;
}
- (Contact*) contact {
  return result.contact;
}
- (ChangeContactDetailResponse_Builder*) setContact:(Contact*) value {
  result.hasContact = YES;
  result.contact = value;
  return self;
}
- (ChangeContactDetailResponse_Builder*) setContactBuilder:(Contact_Builder*) builderForValue {
  return [self setContact:[builderForValue build]];
}
- (ChangeContactDetailResponse_Builder*) mergeContact:(Contact*) value {
  if (result.hasContact &&
      result.contact != [Contact defaultInstance]) {
    result.contact =
      [[[Contact builderWithPrototype:result.contact] mergeFrom:value] buildPartial];
  } else {
    result.contact = value;
  }
  result.hasContact = YES;
  return self;
}
- (ChangeContactDetailResponse_Builder*) clearContact {
  result.hasContact = NO;
  result.contact = [Contact defaultInstance];
  return self;
}
@end

@interface Profile ()
@property int32_t userId;
@property (retain) NSString* name;
@property (retain) NSString* nickName;
@property int32_t gender;
@property (retain) NSString* mobilePhoneNum;
@property (retain) NSString* email;
@property (retain) NSString* birthday;
@property (retain) NSString* tileUrl;
@property BOOL isProvider;
@property (retain) NSString* lisence;
@property (retain) NSString* publishClassType;
@end

@implementation Profile

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasNickName {
  return !!hasNickName_;
}
- (void) setHasNickName:(BOOL) value {
  hasNickName_ = !!value;
}
@synthesize nickName;
- (BOOL) hasGender {
  return !!hasGender_;
}
- (void) setHasGender:(BOOL) value {
  hasGender_ = !!value;
}
@synthesize gender;
- (BOOL) hasMobilePhoneNum {
  return !!hasMobilePhoneNum_;
}
- (void) setHasMobilePhoneNum:(BOOL) value {
  hasMobilePhoneNum_ = !!value;
}
@synthesize mobilePhoneNum;
- (BOOL) hasEmail {
  return !!hasEmail_;
}
- (void) setHasEmail:(BOOL) value {
  hasEmail_ = !!value;
}
@synthesize email;
- (BOOL) hasBirthday {
  return !!hasBirthday_;
}
- (void) setHasBirthday:(BOOL) value {
  hasBirthday_ = !!value;
}
@synthesize birthday;
- (BOOL) hasTileUrl {
  return !!hasTileUrl_;
}
- (void) setHasTileUrl:(BOOL) value {
  hasTileUrl_ = !!value;
}
@synthesize tileUrl;
- (BOOL) hasIsProvider {
  return !!hasIsProvider_;
}
- (void) setHasIsProvider:(BOOL) value {
  hasIsProvider_ = !!value;
}
- (BOOL) isProvider {
  return !!isProvider_;
}
- (void) setIsProvider:(BOOL) value {
  isProvider_ = !!value;
}
- (BOOL) hasLisence {
  return !!hasLisence_;
}
- (void) setHasLisence:(BOOL) value {
  hasLisence_ = !!value;
}
@synthesize lisence;
- (BOOL) hasPublishClassType {
  return !!hasPublishClassType_;
}
- (void) setHasPublishClassType:(BOOL) value {
  hasPublishClassType_ = !!value;
}
@synthesize publishClassType;
- (void) dealloc {
  self.name = nil;
  self.nickName = nil;
  self.mobilePhoneNum = nil;
  self.email = nil;
  self.birthday = nil;
  self.tileUrl = nil;
  self.lisence = nil;
  self.publishClassType = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.name = @"";
    self.nickName = @"";
    self.gender = 0;
    self.mobilePhoneNum = @"";
    self.email = @"";
    self.birthday = @"";
    self.tileUrl = @"";
    self.isProvider = NO;
    self.lisence = @"";
    self.publishClassType = @"";
  }
  return self;
}
static Profile* defaultProfileInstance = nil;
+ (void) initialize {
  if (self == [Profile class]) {
    defaultProfileInstance = [[Profile alloc] init];
  }
}
+ (Profile*) defaultInstance {
  return defaultProfileInstance;
}
- (Profile*) defaultInstance {
  return defaultProfileInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasNickName) {
    [output writeString:3 value:self.nickName];
  }
  if (self.hasGender) {
    [output writeInt32:4 value:self.gender];
  }
  if (self.hasMobilePhoneNum) {
    [output writeString:5 value:self.mobilePhoneNum];
  }
  if (self.hasEmail) {
    [output writeString:6 value:self.email];
  }
  if (self.hasBirthday) {
    [output writeString:7 value:self.birthday];
  }
  if (self.hasTileUrl) {
    [output writeString:8 value:self.tileUrl];
  }
  if (self.hasIsProvider) {
    [output writeBool:9 value:self.isProvider];
  }
  if (self.hasLisence) {
    [output writeString:10 value:self.lisence];
  }
  if (self.hasPublishClassType) {
    [output writeString:11 value:self.publishClassType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasNickName) {
    size += computeStringSize(3, self.nickName);
  }
  if (self.hasGender) {
    size += computeInt32Size(4, self.gender);
  }
  if (self.hasMobilePhoneNum) {
    size += computeStringSize(5, self.mobilePhoneNum);
  }
  if (self.hasEmail) {
    size += computeStringSize(6, self.email);
  }
  if (self.hasBirthday) {
    size += computeStringSize(7, self.birthday);
  }
  if (self.hasTileUrl) {
    size += computeStringSize(8, self.tileUrl);
  }
  if (self.hasIsProvider) {
    size += computeBoolSize(9, self.isProvider);
  }
  if (self.hasLisence) {
    size += computeStringSize(10, self.lisence);
  }
  if (self.hasPublishClassType) {
    size += computeStringSize(11, self.publishClassType);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Profile*) parseFromData:(NSData*) data {
  return (Profile*)[[[Profile builder] mergeFromData:data] build];
}
+ (Profile*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Profile*)[[[Profile builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Profile*) parseFromInputStream:(NSInputStream*) input {
  return (Profile*)[[[Profile builder] mergeFromInputStream:input] build];
}
+ (Profile*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Profile*)[[[Profile builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Profile*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Profile*)[[[Profile builder] mergeFromCodedInputStream:input] build];
}
+ (Profile*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Profile*)[[[Profile builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Profile_Builder*) builder {
  return [[[Profile_Builder alloc] init] autorelease];
}
+ (Profile_Builder*) builderWithPrototype:(Profile*) prototype {
  return [[Profile builder] mergeFrom:prototype];
}
- (Profile_Builder*) builder {
  return [Profile builder];
}
@end

@interface Profile_Builder()
@property (retain) Profile* result;
@end

@implementation Profile_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Profile alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Profile_Builder*) clear {
  self.result = [[[Profile alloc] init] autorelease];
  return self;
}
- (Profile_Builder*) clone {
  return [Profile builderWithPrototype:result];
}
- (Profile*) defaultInstance {
  return [Profile defaultInstance];
}
- (Profile*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Profile*) buildPartial {
  Profile* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Profile_Builder*) mergeFrom:(Profile*) other {
  if (other == [Profile defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasNickName) {
    [self setNickName:other.nickName];
  }
  if (other.hasGender) {
    [self setGender:other.gender];
  }
  if (other.hasMobilePhoneNum) {
    [self setMobilePhoneNum:other.mobilePhoneNum];
  }
  if (other.hasEmail) {
    [self setEmail:other.email];
  }
  if (other.hasBirthday) {
    [self setBirthday:other.birthday];
  }
  if (other.hasTileUrl) {
    [self setTileUrl:other.tileUrl];
  }
  if (other.hasIsProvider) {
    [self setIsProvider:other.isProvider];
  }
  if (other.hasLisence) {
    [self setLisence:other.lisence];
  }
  if (other.hasPublishClassType) {
    [self setPublishClassType:other.publishClassType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Profile_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Profile_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setNickName:[input readString]];
        break;
      }
      case 32: {
        [self setGender:[input readInt32]];
        break;
      }
      case 42: {
        [self setMobilePhoneNum:[input readString]];
        break;
      }
      case 50: {
        [self setEmail:[input readString]];
        break;
      }
      case 58: {
        [self setBirthday:[input readString]];
        break;
      }
      case 66: {
        [self setTileUrl:[input readString]];
        break;
      }
      case 72: {
        [self setIsProvider:[input readBool]];
        break;
      }
      case 82: {
        [self setLisence:[input readString]];
        break;
      }
      case 90: {
        [self setPublishClassType:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (Profile_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (Profile_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (Profile_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (Profile_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasNickName {
  return result.hasNickName;
}
- (NSString*) nickName {
  return result.nickName;
}
- (Profile_Builder*) setNickName:(NSString*) value {
  result.hasNickName = YES;
  result.nickName = value;
  return self;
}
- (Profile_Builder*) clearNickName {
  result.hasNickName = NO;
  result.nickName = @"";
  return self;
}
- (BOOL) hasGender {
  return result.hasGender;
}
- (int32_t) gender {
  return result.gender;
}
- (Profile_Builder*) setGender:(int32_t) value {
  result.hasGender = YES;
  result.gender = value;
  return self;
}
- (Profile_Builder*) clearGender {
  result.hasGender = NO;
  result.gender = 0;
  return self;
}
- (BOOL) hasMobilePhoneNum {
  return result.hasMobilePhoneNum;
}
- (NSString*) mobilePhoneNum {
  return result.mobilePhoneNum;
}
- (Profile_Builder*) setMobilePhoneNum:(NSString*) value {
  result.hasMobilePhoneNum = YES;
  result.mobilePhoneNum = value;
  return self;
}
- (Profile_Builder*) clearMobilePhoneNum {
  result.hasMobilePhoneNum = NO;
  result.mobilePhoneNum = @"";
  return self;
}
- (BOOL) hasEmail {
  return result.hasEmail;
}
- (NSString*) email {
  return result.email;
}
- (Profile_Builder*) setEmail:(NSString*) value {
  result.hasEmail = YES;
  result.email = value;
  return self;
}
- (Profile_Builder*) clearEmail {
  result.hasEmail = NO;
  result.email = @"";
  return self;
}
- (BOOL) hasBirthday {
  return result.hasBirthday;
}
- (NSString*) birthday {
  return result.birthday;
}
- (Profile_Builder*) setBirthday:(NSString*) value {
  result.hasBirthday = YES;
  result.birthday = value;
  return self;
}
- (Profile_Builder*) clearBirthday {
  result.hasBirthday = NO;
  result.birthday = @"";
  return self;
}
- (BOOL) hasTileUrl {
  return result.hasTileUrl;
}
- (NSString*) tileUrl {
  return result.tileUrl;
}
- (Profile_Builder*) setTileUrl:(NSString*) value {
  result.hasTileUrl = YES;
  result.tileUrl = value;
  return self;
}
- (Profile_Builder*) clearTileUrl {
  result.hasTileUrl = NO;
  result.tileUrl = @"";
  return self;
}
- (BOOL) hasIsProvider {
  return result.hasIsProvider;
}
- (BOOL) isProvider {
  return result.isProvider;
}
- (Profile_Builder*) setIsProvider:(BOOL) value {
  result.hasIsProvider = YES;
  result.isProvider = value;
  return self;
}
- (Profile_Builder*) clearIsProvider {
  result.hasIsProvider = NO;
  result.isProvider = NO;
  return self;
}
- (BOOL) hasLisence {
  return result.hasLisence;
}
- (NSString*) lisence {
  return result.lisence;
}
- (Profile_Builder*) setLisence:(NSString*) value {
  result.hasLisence = YES;
  result.lisence = value;
  return self;
}
- (Profile_Builder*) clearLisence {
  result.hasLisence = NO;
  result.lisence = @"";
  return self;
}
- (BOOL) hasPublishClassType {
  return result.hasPublishClassType;
}
- (NSString*) publishClassType {
  return result.publishClassType;
}
- (Profile_Builder*) setPublishClassType:(NSString*) value {
  result.hasPublishClassType = YES;
  result.publishClassType = value;
  return self;
}
- (Profile_Builder*) clearPublishClassType {
  result.hasPublishClassType = NO;
  result.publishClassType = @"";
  return self;
}
@end

@interface ProfileRequest ()
@property (retain) NSString* token;
@property int32_t userId;
@end

@implementation ProfileRequest

- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) value {
  hasToken_ = !!value;
}
@synthesize token;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (void) dealloc {
  self.token = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.token = @"";
    self.userId = 0;
  }
  return self;
}
static ProfileRequest* defaultProfileRequestInstance = nil;
+ (void) initialize {
  if (self == [ProfileRequest class]) {
    defaultProfileRequestInstance = [[ProfileRequest alloc] init];
  }
}
+ (ProfileRequest*) defaultInstance {
  return defaultProfileRequestInstance;
}
- (ProfileRequest*) defaultInstance {
  return defaultProfileRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasToken) {
    [output writeString:1 value:self.token];
  }
  if (self.hasUserId) {
    [output writeInt32:2 value:self.userId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasToken) {
    size += computeStringSize(1, self.token);
  }
  if (self.hasUserId) {
    size += computeInt32Size(2, self.userId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ProfileRequest*) parseFromData:(NSData*) data {
  return (ProfileRequest*)[[[ProfileRequest builder] mergeFromData:data] build];
}
+ (ProfileRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProfileRequest*)[[[ProfileRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ProfileRequest*) parseFromInputStream:(NSInputStream*) input {
  return (ProfileRequest*)[[[ProfileRequest builder] mergeFromInputStream:input] build];
}
+ (ProfileRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProfileRequest*)[[[ProfileRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProfileRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ProfileRequest*)[[[ProfileRequest builder] mergeFromCodedInputStream:input] build];
}
+ (ProfileRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProfileRequest*)[[[ProfileRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProfileRequest_Builder*) builder {
  return [[[ProfileRequest_Builder alloc] init] autorelease];
}
+ (ProfileRequest_Builder*) builderWithPrototype:(ProfileRequest*) prototype {
  return [[ProfileRequest builder] mergeFrom:prototype];
}
- (ProfileRequest_Builder*) builder {
  return [ProfileRequest builder];
}
@end

@interface ProfileRequest_Builder()
@property (retain) ProfileRequest* result;
@end

@implementation ProfileRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ProfileRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ProfileRequest_Builder*) clear {
  self.result = [[[ProfileRequest alloc] init] autorelease];
  return self;
}
- (ProfileRequest_Builder*) clone {
  return [ProfileRequest builderWithPrototype:result];
}
- (ProfileRequest*) defaultInstance {
  return [ProfileRequest defaultInstance];
}
- (ProfileRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ProfileRequest*) buildPartial {
  ProfileRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ProfileRequest_Builder*) mergeFrom:(ProfileRequest*) other {
  if (other == [ProfileRequest defaultInstance]) {
    return self;
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProfileRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProfileRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setToken:[input readString]];
        break;
      }
      case 16: {
        [self setUserId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasToken {
  return result.hasToken;
}
- (NSString*) token {
  return result.token;
}
- (ProfileRequest_Builder*) setToken:(NSString*) value {
  result.hasToken = YES;
  result.token = value;
  return self;
}
- (ProfileRequest_Builder*) clearToken {
  result.hasToken = NO;
  result.token = @"";
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (ProfileRequest_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (ProfileRequest_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
@end

@interface ProfileResponse ()
@property BOOL isSucceed;
@property (retain) Profile* profile;
@end

@implementation ProfileResponse

- (BOOL) hasIsSucceed {
  return !!hasIsSucceed_;
}
- (void) setHasIsSucceed:(BOOL) value {
  hasIsSucceed_ = !!value;
}
- (BOOL) isSucceed {
  return !!isSucceed_;
}
- (void) setIsSucceed:(BOOL) value {
  isSucceed_ = !!value;
}
- (BOOL) hasProfile {
  return !!hasProfile_;
}
- (void) setHasProfile:(BOOL) value {
  hasProfile_ = !!value;
}
@synthesize profile;
- (void) dealloc {
  self.profile = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.isSucceed = NO;
    self.profile = [Profile defaultInstance];
  }
  return self;
}
static ProfileResponse* defaultProfileResponseInstance = nil;
+ (void) initialize {
  if (self == [ProfileResponse class]) {
    defaultProfileResponseInstance = [[ProfileResponse alloc] init];
  }
}
+ (ProfileResponse*) defaultInstance {
  return defaultProfileResponseInstance;
}
- (ProfileResponse*) defaultInstance {
  return defaultProfileResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsSucceed) {
    [output writeBool:1 value:self.isSucceed];
  }
  if (self.hasProfile) {
    [output writeMessage:2 value:self.profile];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasIsSucceed) {
    size += computeBoolSize(1, self.isSucceed);
  }
  if (self.hasProfile) {
    size += computeMessageSize(2, self.profile);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ProfileResponse*) parseFromData:(NSData*) data {
  return (ProfileResponse*)[[[ProfileResponse builder] mergeFromData:data] build];
}
+ (ProfileResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProfileResponse*)[[[ProfileResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ProfileResponse*) parseFromInputStream:(NSInputStream*) input {
  return (ProfileResponse*)[[[ProfileResponse builder] mergeFromInputStream:input] build];
}
+ (ProfileResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProfileResponse*)[[[ProfileResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProfileResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ProfileResponse*)[[[ProfileResponse builder] mergeFromCodedInputStream:input] build];
}
+ (ProfileResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProfileResponse*)[[[ProfileResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProfileResponse_Builder*) builder {
  return [[[ProfileResponse_Builder alloc] init] autorelease];
}
+ (ProfileResponse_Builder*) builderWithPrototype:(ProfileResponse*) prototype {
  return [[ProfileResponse builder] mergeFrom:prototype];
}
- (ProfileResponse_Builder*) builder {
  return [ProfileResponse builder];
}
@end

@interface ProfileResponse_Builder()
@property (retain) ProfileResponse* result;
@end

@implementation ProfileResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ProfileResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ProfileResponse_Builder*) clear {
  self.result = [[[ProfileResponse alloc] init] autorelease];
  return self;
}
- (ProfileResponse_Builder*) clone {
  return [ProfileResponse builderWithPrototype:result];
}
- (ProfileResponse*) defaultInstance {
  return [ProfileResponse defaultInstance];
}
- (ProfileResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ProfileResponse*) buildPartial {
  ProfileResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ProfileResponse_Builder*) mergeFrom:(ProfileResponse*) other {
  if (other == [ProfileResponse defaultInstance]) {
    return self;
  }
  if (other.hasIsSucceed) {
    [self setIsSucceed:other.isSucceed];
  }
  if (other.hasProfile) {
    [self mergeProfile:other.profile];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProfileResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProfileResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIsSucceed:[input readBool]];
        break;
      }
      case 18: {
        Profile_Builder* subBuilder = [Profile builder];
        if (self.hasProfile) {
          [subBuilder mergeFrom:self.profile];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setProfile:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasIsSucceed {
  return result.hasIsSucceed;
}
- (BOOL) isSucceed {
  return result.isSucceed;
}
- (ProfileResponse_Builder*) setIsSucceed:(BOOL) value {
  result.hasIsSucceed = YES;
  result.isSucceed = value;
  return self;
}
- (ProfileResponse_Builder*) clearIsSucceed {
  result.hasIsSucceed = NO;
  result.isSucceed = NO;
  return self;
}
- (BOOL) hasProfile {
  return result.hasProfile;
}
- (Profile*) profile {
  return result.profile;
}
- (ProfileResponse_Builder*) setProfile:(Profile*) value {
  result.hasProfile = YES;
  result.profile = value;
  return self;
}
- (ProfileResponse_Builder*) setProfileBuilder:(Profile_Builder*) builderForValue {
  return [self setProfile:[builderForValue build]];
}
- (ProfileResponse_Builder*) mergeProfile:(Profile*) value {
  if (result.hasProfile &&
      result.profile != [Profile defaultInstance]) {
    result.profile =
      [[[Profile builderWithPrototype:result.profile] mergeFrom:value] buildPartial];
  } else {
    result.profile = value;
  }
  result.hasProfile = YES;
  return self;
}
- (ProfileResponse_Builder*) clearProfile {
  result.hasProfile = NO;
  result.profile = [Profile defaultInstance];
  return self;
}
@end

@interface ChangeProfileRequest ()
@property (retain) NSString* token;
@property int32_t userId;
@property (retain) Profile* profile;
@end

@implementation ChangeProfileRequest

- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) value {
  hasToken_ = !!value;
}
@synthesize token;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasProfile {
  return !!hasProfile_;
}
- (void) setHasProfile:(BOOL) value {
  hasProfile_ = !!value;
}
@synthesize profile;
- (void) dealloc {
  self.token = nil;
  self.profile = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.token = @"";
    self.userId = 0;
    self.profile = [Profile defaultInstance];
  }
  return self;
}
static ChangeProfileRequest* defaultChangeProfileRequestInstance = nil;
+ (void) initialize {
  if (self == [ChangeProfileRequest class]) {
    defaultChangeProfileRequestInstance = [[ChangeProfileRequest alloc] init];
  }
}
+ (ChangeProfileRequest*) defaultInstance {
  return defaultChangeProfileRequestInstance;
}
- (ChangeProfileRequest*) defaultInstance {
  return defaultChangeProfileRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasToken) {
    [output writeString:1 value:self.token];
  }
  if (self.hasUserId) {
    [output writeInt32:2 value:self.userId];
  }
  if (self.hasProfile) {
    [output writeMessage:3 value:self.profile];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasToken) {
    size += computeStringSize(1, self.token);
  }
  if (self.hasUserId) {
    size += computeInt32Size(2, self.userId);
  }
  if (self.hasProfile) {
    size += computeMessageSize(3, self.profile);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ChangeProfileRequest*) parseFromData:(NSData*) data {
  return (ChangeProfileRequest*)[[[ChangeProfileRequest builder] mergeFromData:data] build];
}
+ (ChangeProfileRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeProfileRequest*)[[[ChangeProfileRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ChangeProfileRequest*) parseFromInputStream:(NSInputStream*) input {
  return (ChangeProfileRequest*)[[[ChangeProfileRequest builder] mergeFromInputStream:input] build];
}
+ (ChangeProfileRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeProfileRequest*)[[[ChangeProfileRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeProfileRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ChangeProfileRequest*)[[[ChangeProfileRequest builder] mergeFromCodedInputStream:input] build];
}
+ (ChangeProfileRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeProfileRequest*)[[[ChangeProfileRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeProfileRequest_Builder*) builder {
  return [[[ChangeProfileRequest_Builder alloc] init] autorelease];
}
+ (ChangeProfileRequest_Builder*) builderWithPrototype:(ChangeProfileRequest*) prototype {
  return [[ChangeProfileRequest builder] mergeFrom:prototype];
}
- (ChangeProfileRequest_Builder*) builder {
  return [ChangeProfileRequest builder];
}
@end

@interface ChangeProfileRequest_Builder()
@property (retain) ChangeProfileRequest* result;
@end

@implementation ChangeProfileRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ChangeProfileRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ChangeProfileRequest_Builder*) clear {
  self.result = [[[ChangeProfileRequest alloc] init] autorelease];
  return self;
}
- (ChangeProfileRequest_Builder*) clone {
  return [ChangeProfileRequest builderWithPrototype:result];
}
- (ChangeProfileRequest*) defaultInstance {
  return [ChangeProfileRequest defaultInstance];
}
- (ChangeProfileRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ChangeProfileRequest*) buildPartial {
  ChangeProfileRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ChangeProfileRequest_Builder*) mergeFrom:(ChangeProfileRequest*) other {
  if (other == [ChangeProfileRequest defaultInstance]) {
    return self;
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasProfile) {
    [self mergeProfile:other.profile];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChangeProfileRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChangeProfileRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setToken:[input readString]];
        break;
      }
      case 16: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 26: {
        Profile_Builder* subBuilder = [Profile builder];
        if (self.hasProfile) {
          [subBuilder mergeFrom:self.profile];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setProfile:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasToken {
  return result.hasToken;
}
- (NSString*) token {
  return result.token;
}
- (ChangeProfileRequest_Builder*) setToken:(NSString*) value {
  result.hasToken = YES;
  result.token = value;
  return self;
}
- (ChangeProfileRequest_Builder*) clearToken {
  result.hasToken = NO;
  result.token = @"";
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (ChangeProfileRequest_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (ChangeProfileRequest_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasProfile {
  return result.hasProfile;
}
- (Profile*) profile {
  return result.profile;
}
- (ChangeProfileRequest_Builder*) setProfile:(Profile*) value {
  result.hasProfile = YES;
  result.profile = value;
  return self;
}
- (ChangeProfileRequest_Builder*) setProfileBuilder:(Profile_Builder*) builderForValue {
  return [self setProfile:[builderForValue build]];
}
- (ChangeProfileRequest_Builder*) mergeProfile:(Profile*) value {
  if (result.hasProfile &&
      result.profile != [Profile defaultInstance]) {
    result.profile =
      [[[Profile builderWithPrototype:result.profile] mergeFrom:value] buildPartial];
  } else {
    result.profile = value;
  }
  result.hasProfile = YES;
  return self;
}
- (ChangeProfileRequest_Builder*) clearProfile {
  result.hasProfile = NO;
  result.profile = [Profile defaultInstance];
  return self;
}
@end

@interface ChangeProfileResponse ()
@property BOOL isSucceed;
@property (retain) Profile* profile;
@end

@implementation ChangeProfileResponse

- (BOOL) hasIsSucceed {
  return !!hasIsSucceed_;
}
- (void) setHasIsSucceed:(BOOL) value {
  hasIsSucceed_ = !!value;
}
- (BOOL) isSucceed {
  return !!isSucceed_;
}
- (void) setIsSucceed:(BOOL) value {
  isSucceed_ = !!value;
}
- (BOOL) hasProfile {
  return !!hasProfile_;
}
- (void) setHasProfile:(BOOL) value {
  hasProfile_ = !!value;
}
@synthesize profile;
- (void) dealloc {
  self.profile = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.isSucceed = NO;
    self.profile = [Profile defaultInstance];
  }
  return self;
}
static ChangeProfileResponse* defaultChangeProfileResponseInstance = nil;
+ (void) initialize {
  if (self == [ChangeProfileResponse class]) {
    defaultChangeProfileResponseInstance = [[ChangeProfileResponse alloc] init];
  }
}
+ (ChangeProfileResponse*) defaultInstance {
  return defaultChangeProfileResponseInstance;
}
- (ChangeProfileResponse*) defaultInstance {
  return defaultChangeProfileResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsSucceed) {
    [output writeBool:1 value:self.isSucceed];
  }
  if (self.hasProfile) {
    [output writeMessage:2 value:self.profile];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasIsSucceed) {
    size += computeBoolSize(1, self.isSucceed);
  }
  if (self.hasProfile) {
    size += computeMessageSize(2, self.profile);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ChangeProfileResponse*) parseFromData:(NSData*) data {
  return (ChangeProfileResponse*)[[[ChangeProfileResponse builder] mergeFromData:data] build];
}
+ (ChangeProfileResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeProfileResponse*)[[[ChangeProfileResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ChangeProfileResponse*) parseFromInputStream:(NSInputStream*) input {
  return (ChangeProfileResponse*)[[[ChangeProfileResponse builder] mergeFromInputStream:input] build];
}
+ (ChangeProfileResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeProfileResponse*)[[[ChangeProfileResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeProfileResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ChangeProfileResponse*)[[[ChangeProfileResponse builder] mergeFromCodedInputStream:input] build];
}
+ (ChangeProfileResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangeProfileResponse*)[[[ChangeProfileResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangeProfileResponse_Builder*) builder {
  return [[[ChangeProfileResponse_Builder alloc] init] autorelease];
}
+ (ChangeProfileResponse_Builder*) builderWithPrototype:(ChangeProfileResponse*) prototype {
  return [[ChangeProfileResponse builder] mergeFrom:prototype];
}
- (ChangeProfileResponse_Builder*) builder {
  return [ChangeProfileResponse builder];
}
@end

@interface ChangeProfileResponse_Builder()
@property (retain) ChangeProfileResponse* result;
@end

@implementation ChangeProfileResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ChangeProfileResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ChangeProfileResponse_Builder*) clear {
  self.result = [[[ChangeProfileResponse alloc] init] autorelease];
  return self;
}
- (ChangeProfileResponse_Builder*) clone {
  return [ChangeProfileResponse builderWithPrototype:result];
}
- (ChangeProfileResponse*) defaultInstance {
  return [ChangeProfileResponse defaultInstance];
}
- (ChangeProfileResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ChangeProfileResponse*) buildPartial {
  ChangeProfileResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ChangeProfileResponse_Builder*) mergeFrom:(ChangeProfileResponse*) other {
  if (other == [ChangeProfileResponse defaultInstance]) {
    return self;
  }
  if (other.hasIsSucceed) {
    [self setIsSucceed:other.isSucceed];
  }
  if (other.hasProfile) {
    [self mergeProfile:other.profile];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChangeProfileResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChangeProfileResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIsSucceed:[input readBool]];
        break;
      }
      case 18: {
        Profile_Builder* subBuilder = [Profile builder];
        if (self.hasProfile) {
          [subBuilder mergeFrom:self.profile];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setProfile:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasIsSucceed {
  return result.hasIsSucceed;
}
- (BOOL) isSucceed {
  return result.isSucceed;
}
- (ChangeProfileResponse_Builder*) setIsSucceed:(BOOL) value {
  result.hasIsSucceed = YES;
  result.isSucceed = value;
  return self;
}
- (ChangeProfileResponse_Builder*) clearIsSucceed {
  result.hasIsSucceed = NO;
  result.isSucceed = NO;
  return self;
}
- (BOOL) hasProfile {
  return result.hasProfile;
}
- (Profile*) profile {
  return result.profile;
}
- (ChangeProfileResponse_Builder*) setProfile:(Profile*) value {
  result.hasProfile = YES;
  result.profile = value;
  return self;
}
- (ChangeProfileResponse_Builder*) setProfileBuilder:(Profile_Builder*) builderForValue {
  return [self setProfile:[builderForValue build]];
}
- (ChangeProfileResponse_Builder*) mergeProfile:(Profile*) value {
  if (result.hasProfile &&
      result.profile != [Profile defaultInstance]) {
    result.profile =
      [[[Profile builderWithPrototype:result.profile] mergeFrom:value] buildPartial];
  } else {
    result.profile = value;
  }
  result.hasProfile = YES;
  return self;
}
- (ChangeProfileResponse_Builder*) clearProfile {
  result.hasProfile = NO;
  result.profile = [Profile defaultInstance];
  return self;
}
@end

@interface Message ()
@property int32_t userId;
@property int32_t contactId;
@property (retain) NSString* content;
@property (retain) NSString* sendTime;
@end

@implementation Message

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasContactId {
  return !!hasContactId_;
}
- (void) setHasContactId:(BOOL) value {
  hasContactId_ = !!value;
}
@synthesize contactId;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value {
  hasContent_ = !!value;
}
@synthesize content;
- (BOOL) hasSendTime {
  return !!hasSendTime_;
}
- (void) setHasSendTime:(BOOL) value {
  hasSendTime_ = !!value;
}
@synthesize sendTime;
- (void) dealloc {
  self.content = nil;
  self.sendTime = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.contactId = 0;
    self.content = @"";
    self.sendTime = @"";
  }
  return self;
}
static Message* defaultMessageInstance = nil;
+ (void) initialize {
  if (self == [Message class]) {
    defaultMessageInstance = [[Message alloc] init];
  }
}
+ (Message*) defaultInstance {
  return defaultMessageInstance;
}
- (Message*) defaultInstance {
  return defaultMessageInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasContactId) {
    [output writeInt32:2 value:self.contactId];
  }
  if (self.hasContent) {
    [output writeString:3 value:self.content];
  }
  if (self.hasSendTime) {
    [output writeString:4 value:self.sendTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasContactId) {
    size += computeInt32Size(2, self.contactId);
  }
  if (self.hasContent) {
    size += computeStringSize(3, self.content);
  }
  if (self.hasSendTime) {
    size += computeStringSize(4, self.sendTime);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Message*) parseFromData:(NSData*) data {
  return (Message*)[[[Message builder] mergeFromData:data] build];
}
+ (Message*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Message*)[[[Message builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Message*) parseFromInputStream:(NSInputStream*) input {
  return (Message*)[[[Message builder] mergeFromInputStream:input] build];
}
+ (Message*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Message*)[[[Message builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Message*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Message*)[[[Message builder] mergeFromCodedInputStream:input] build];
}
+ (Message*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Message*)[[[Message builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Message_Builder*) builder {
  return [[[Message_Builder alloc] init] autorelease];
}
+ (Message_Builder*) builderWithPrototype:(Message*) prototype {
  return [[Message builder] mergeFrom:prototype];
}
- (Message_Builder*) builder {
  return [Message builder];
}
@end

@interface Message_Builder()
@property (retain) Message* result;
@end

@implementation Message_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Message alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Message_Builder*) clear {
  self.result = [[[Message alloc] init] autorelease];
  return self;
}
- (Message_Builder*) clone {
  return [Message builderWithPrototype:result];
}
- (Message*) defaultInstance {
  return [Message defaultInstance];
}
- (Message*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Message*) buildPartial {
  Message* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Message_Builder*) mergeFrom:(Message*) other {
  if (other == [Message defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasContactId) {
    [self setContactId:other.contactId];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasSendTime) {
    [self setSendTime:other.sendTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Message_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Message_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 16: {
        [self setContactId:[input readInt32]];
        break;
      }
      case 26: {
        [self setContent:[input readString]];
        break;
      }
      case 34: {
        [self setSendTime:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (Message_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (Message_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasContactId {
  return result.hasContactId;
}
- (int32_t) contactId {
  return result.contactId;
}
- (Message_Builder*) setContactId:(int32_t) value {
  result.hasContactId = YES;
  result.contactId = value;
  return self;
}
- (Message_Builder*) clearContactId {
  result.hasContactId = NO;
  result.contactId = 0;
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (Message_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (Message_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
- (BOOL) hasSendTime {
  return result.hasSendTime;
}
- (NSString*) sendTime {
  return result.sendTime;
}
- (Message_Builder*) setSendTime:(NSString*) value {
  result.hasSendTime = YES;
  result.sendTime = value;
  return self;
}
- (Message_Builder*) clearSendTime {
  result.hasSendTime = NO;
  result.sendTime = @"";
  return self;
}
@end

@interface MessageList ()
@property int32_t contactId;
@property (retain) NSMutableArray* mutableMessagesList;
@end

@implementation MessageList

- (BOOL) hasContactId {
  return !!hasContactId_;
}
- (void) setHasContactId:(BOOL) value {
  hasContactId_ = !!value;
}
@synthesize contactId;
@synthesize mutableMessagesList;
- (void) dealloc {
  self.mutableMessagesList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.contactId = 0;
  }
  return self;
}
static MessageList* defaultMessageListInstance = nil;
+ (void) initialize {
  if (self == [MessageList class]) {
    defaultMessageListInstance = [[MessageList alloc] init];
  }
}
+ (MessageList*) defaultInstance {
  return defaultMessageListInstance;
}
- (MessageList*) defaultInstance {
  return defaultMessageListInstance;
}
- (NSArray*) messagesList {
  return mutableMessagesList;
}
- (Message*) messagesAtIndex:(int32_t) index {
  id value = [mutableMessagesList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasContactId) {
    [output writeInt32:1 value:self.contactId];
  }
  for (Message* element in self.messagesList) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasContactId) {
    size += computeInt32Size(1, self.contactId);
  }
  for (Message* element in self.messagesList) {
    size += computeMessageSize(2, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MessageList*) parseFromData:(NSData*) data {
  return (MessageList*)[[[MessageList builder] mergeFromData:data] build];
}
+ (MessageList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageList*)[[[MessageList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MessageList*) parseFromInputStream:(NSInputStream*) input {
  return (MessageList*)[[[MessageList builder] mergeFromInputStream:input] build];
}
+ (MessageList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageList*)[[[MessageList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MessageList*)[[[MessageList builder] mergeFromCodedInputStream:input] build];
}
+ (MessageList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageList*)[[[MessageList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageList_Builder*) builder {
  return [[[MessageList_Builder alloc] init] autorelease];
}
+ (MessageList_Builder*) builderWithPrototype:(MessageList*) prototype {
  return [[MessageList builder] mergeFrom:prototype];
}
- (MessageList_Builder*) builder {
  return [MessageList builder];
}
@end

@interface MessageList_Builder()
@property (retain) MessageList* result;
@end

@implementation MessageList_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MessageList alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MessageList_Builder*) clear {
  self.result = [[[MessageList alloc] init] autorelease];
  return self;
}
- (MessageList_Builder*) clone {
  return [MessageList builderWithPrototype:result];
}
- (MessageList*) defaultInstance {
  return [MessageList defaultInstance];
}
- (MessageList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MessageList*) buildPartial {
  MessageList* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MessageList_Builder*) mergeFrom:(MessageList*) other {
  if (other == [MessageList defaultInstance]) {
    return self;
  }
  if (other.hasContactId) {
    [self setContactId:other.contactId];
  }
  if (other.mutableMessagesList.count > 0) {
    if (result.mutableMessagesList == nil) {
      result.mutableMessagesList = [NSMutableArray array];
    }
    [result.mutableMessagesList addObjectsFromArray:other.mutableMessagesList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MessageList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MessageList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setContactId:[input readInt32]];
        break;
      }
      case 18: {
        Message_Builder* subBuilder = [Message builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMessages:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasContactId {
  return result.hasContactId;
}
- (int32_t) contactId {
  return result.contactId;
}
- (MessageList_Builder*) setContactId:(int32_t) value {
  result.hasContactId = YES;
  result.contactId = value;
  return self;
}
- (MessageList_Builder*) clearContactId {
  result.hasContactId = NO;
  result.contactId = 0;
  return self;
}
- (NSArray*) messagesList {
  if (result.mutableMessagesList == nil) { return [NSArray array]; }
  return result.mutableMessagesList;
}
- (Message*) messagesAtIndex:(int32_t) index {
  return [result messagesAtIndex:index];
}
- (MessageList_Builder*) replaceMessagesAtIndex:(int32_t) index with:(Message*) value {
  [result.mutableMessagesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (MessageList_Builder*) addAllMessages:(NSArray*) values {
  if (result.mutableMessagesList == nil) {
    result.mutableMessagesList = [NSMutableArray array];
  }
  [result.mutableMessagesList addObjectsFromArray:values];
  return self;
}
- (MessageList_Builder*) clearMessagesList {
  result.mutableMessagesList = nil;
  return self;
}
- (MessageList_Builder*) addMessages:(Message*) value {
  if (result.mutableMessagesList == nil) {
    result.mutableMessagesList = [NSMutableArray array];
  }
  [result.mutableMessagesList addObject:value];
  return self;
}
@end

@interface MessageRequest ()
@property (retain) NSString* token;
@property int32_t userId;
@property (retain) NSString* timeStamp;
@end

@implementation MessageRequest

- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) value {
  hasToken_ = !!value;
}
@synthesize token;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasTimeStamp {
  return !!hasTimeStamp_;
}
- (void) setHasTimeStamp:(BOOL) value {
  hasTimeStamp_ = !!value;
}
@synthesize timeStamp;
- (void) dealloc {
  self.token = nil;
  self.timeStamp = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.token = @"";
    self.userId = 0;
    self.timeStamp = @"";
  }
  return self;
}
static MessageRequest* defaultMessageRequestInstance = nil;
+ (void) initialize {
  if (self == [MessageRequest class]) {
    defaultMessageRequestInstance = [[MessageRequest alloc] init];
  }
}
+ (MessageRequest*) defaultInstance {
  return defaultMessageRequestInstance;
}
- (MessageRequest*) defaultInstance {
  return defaultMessageRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasToken) {
    [output writeString:1 value:self.token];
  }
  if (self.hasUserId) {
    [output writeInt32:2 value:self.userId];
  }
  if (self.hasTimeStamp) {
    [output writeString:3 value:self.timeStamp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasToken) {
    size += computeStringSize(1, self.token);
  }
  if (self.hasUserId) {
    size += computeInt32Size(2, self.userId);
  }
  if (self.hasTimeStamp) {
    size += computeStringSize(3, self.timeStamp);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MessageRequest*) parseFromData:(NSData*) data {
  return (MessageRequest*)[[[MessageRequest builder] mergeFromData:data] build];
}
+ (MessageRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageRequest*)[[[MessageRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MessageRequest*) parseFromInputStream:(NSInputStream*) input {
  return (MessageRequest*)[[[MessageRequest builder] mergeFromInputStream:input] build];
}
+ (MessageRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageRequest*)[[[MessageRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MessageRequest*)[[[MessageRequest builder] mergeFromCodedInputStream:input] build];
}
+ (MessageRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageRequest*)[[[MessageRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageRequest_Builder*) builder {
  return [[[MessageRequest_Builder alloc] init] autorelease];
}
+ (MessageRequest_Builder*) builderWithPrototype:(MessageRequest*) prototype {
  return [[MessageRequest builder] mergeFrom:prototype];
}
- (MessageRequest_Builder*) builder {
  return [MessageRequest builder];
}
@end

@interface MessageRequest_Builder()
@property (retain) MessageRequest* result;
@end

@implementation MessageRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MessageRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MessageRequest_Builder*) clear {
  self.result = [[[MessageRequest alloc] init] autorelease];
  return self;
}
- (MessageRequest_Builder*) clone {
  return [MessageRequest builderWithPrototype:result];
}
- (MessageRequest*) defaultInstance {
  return [MessageRequest defaultInstance];
}
- (MessageRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MessageRequest*) buildPartial {
  MessageRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MessageRequest_Builder*) mergeFrom:(MessageRequest*) other {
  if (other == [MessageRequest defaultInstance]) {
    return self;
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasTimeStamp) {
    [self setTimeStamp:other.timeStamp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MessageRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MessageRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setToken:[input readString]];
        break;
      }
      case 16: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 26: {
        [self setTimeStamp:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasToken {
  return result.hasToken;
}
- (NSString*) token {
  return result.token;
}
- (MessageRequest_Builder*) setToken:(NSString*) value {
  result.hasToken = YES;
  result.token = value;
  return self;
}
- (MessageRequest_Builder*) clearToken {
  result.hasToken = NO;
  result.token = @"";
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (MessageRequest_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (MessageRequest_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasTimeStamp {
  return result.hasTimeStamp;
}
- (NSString*) timeStamp {
  return result.timeStamp;
}
- (MessageRequest_Builder*) setTimeStamp:(NSString*) value {
  result.hasTimeStamp = YES;
  result.timeStamp = value;
  return self;
}
- (MessageRequest_Builder*) clearTimeStamp {
  result.hasTimeStamp = NO;
  result.timeStamp = @"";
  return self;
}
@end

@interface MessageResponse ()
@property BOOL isSucceed;
@property (retain) NSMutableArray* mutableMessageListsList;
@property (retain) NSString* timeStamp;
@end

@implementation MessageResponse

- (BOOL) hasIsSucceed {
  return !!hasIsSucceed_;
}
- (void) setHasIsSucceed:(BOOL) value {
  hasIsSucceed_ = !!value;
}
- (BOOL) isSucceed {
  return !!isSucceed_;
}
- (void) setIsSucceed:(BOOL) value {
  isSucceed_ = !!value;
}
@synthesize mutableMessageListsList;
- (BOOL) hasTimeStamp {
  return !!hasTimeStamp_;
}
- (void) setHasTimeStamp:(BOOL) value {
  hasTimeStamp_ = !!value;
}
@synthesize timeStamp;
- (void) dealloc {
  self.mutableMessageListsList = nil;
  self.timeStamp = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.isSucceed = NO;
    self.timeStamp = @"";
  }
  return self;
}
static MessageResponse* defaultMessageResponseInstance = nil;
+ (void) initialize {
  if (self == [MessageResponse class]) {
    defaultMessageResponseInstance = [[MessageResponse alloc] init];
  }
}
+ (MessageResponse*) defaultInstance {
  return defaultMessageResponseInstance;
}
- (MessageResponse*) defaultInstance {
  return defaultMessageResponseInstance;
}
- (NSArray*) messageListsList {
  return mutableMessageListsList;
}
- (MessageList*) messageListsAtIndex:(int32_t) index {
  id value = [mutableMessageListsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsSucceed) {
    [output writeBool:1 value:self.isSucceed];
  }
  for (MessageList* element in self.messageListsList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasTimeStamp) {
    [output writeString:3 value:self.timeStamp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasIsSucceed) {
    size += computeBoolSize(1, self.isSucceed);
  }
  for (MessageList* element in self.messageListsList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasTimeStamp) {
    size += computeStringSize(3, self.timeStamp);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MessageResponse*) parseFromData:(NSData*) data {
  return (MessageResponse*)[[[MessageResponse builder] mergeFromData:data] build];
}
+ (MessageResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageResponse*)[[[MessageResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MessageResponse*) parseFromInputStream:(NSInputStream*) input {
  return (MessageResponse*)[[[MessageResponse builder] mergeFromInputStream:input] build];
}
+ (MessageResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageResponse*)[[[MessageResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MessageResponse*)[[[MessageResponse builder] mergeFromCodedInputStream:input] build];
}
+ (MessageResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessageResponse*)[[[MessageResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageResponse_Builder*) builder {
  return [[[MessageResponse_Builder alloc] init] autorelease];
}
+ (MessageResponse_Builder*) builderWithPrototype:(MessageResponse*) prototype {
  return [[MessageResponse builder] mergeFrom:prototype];
}
- (MessageResponse_Builder*) builder {
  return [MessageResponse builder];
}
@end

@interface MessageResponse_Builder()
@property (retain) MessageResponse* result;
@end

@implementation MessageResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MessageResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MessageResponse_Builder*) clear {
  self.result = [[[MessageResponse alloc] init] autorelease];
  return self;
}
- (MessageResponse_Builder*) clone {
  return [MessageResponse builderWithPrototype:result];
}
- (MessageResponse*) defaultInstance {
  return [MessageResponse defaultInstance];
}
- (MessageResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MessageResponse*) buildPartial {
  MessageResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MessageResponse_Builder*) mergeFrom:(MessageResponse*) other {
  if (other == [MessageResponse defaultInstance]) {
    return self;
  }
  if (other.hasIsSucceed) {
    [self setIsSucceed:other.isSucceed];
  }
  if (other.mutableMessageListsList.count > 0) {
    if (result.mutableMessageListsList == nil) {
      result.mutableMessageListsList = [NSMutableArray array];
    }
    [result.mutableMessageListsList addObjectsFromArray:other.mutableMessageListsList];
  }
  if (other.hasTimeStamp) {
    [self setTimeStamp:other.timeStamp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MessageResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MessageResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIsSucceed:[input readBool]];
        break;
      }
      case 18: {
        MessageList_Builder* subBuilder = [MessageList builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMessageLists:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        [self setTimeStamp:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasIsSucceed {
  return result.hasIsSucceed;
}
- (BOOL) isSucceed {
  return result.isSucceed;
}
- (MessageResponse_Builder*) setIsSucceed:(BOOL) value {
  result.hasIsSucceed = YES;
  result.isSucceed = value;
  return self;
}
- (MessageResponse_Builder*) clearIsSucceed {
  result.hasIsSucceed = NO;
  result.isSucceed = NO;
  return self;
}
- (NSArray*) messageListsList {
  if (result.mutableMessageListsList == nil) { return [NSArray array]; }
  return result.mutableMessageListsList;
}
- (MessageList*) messageListsAtIndex:(int32_t) index {
  return [result messageListsAtIndex:index];
}
- (MessageResponse_Builder*) replaceMessageListsAtIndex:(int32_t) index with:(MessageList*) value {
  [result.mutableMessageListsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (MessageResponse_Builder*) addAllMessageLists:(NSArray*) values {
  if (result.mutableMessageListsList == nil) {
    result.mutableMessageListsList = [NSMutableArray array];
  }
  [result.mutableMessageListsList addObjectsFromArray:values];
  return self;
}
- (MessageResponse_Builder*) clearMessageListsList {
  result.mutableMessageListsList = nil;
  return self;
}
- (MessageResponse_Builder*) addMessageLists:(MessageList*) value {
  if (result.mutableMessageListsList == nil) {
    result.mutableMessageListsList = [NSMutableArray array];
  }
  [result.mutableMessageListsList addObject:value];
  return self;
}
- (BOOL) hasTimeStamp {
  return result.hasTimeStamp;
}
- (NSString*) timeStamp {
  return result.timeStamp;
}
- (MessageResponse_Builder*) setTimeStamp:(NSString*) value {
  result.hasTimeStamp = YES;
  result.timeStamp = value;
  return self;
}
- (MessageResponse_Builder*) clearTimeStamp {
  result.hasTimeStamp = NO;
  result.timeStamp = @"";
  return self;
}
@end

@interface SendMessageRequest ()
@property (retain) NSString* token;
@property int32_t userId;
@property (retain) Message* message;
@end

@implementation SendMessageRequest

- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) value {
  hasToken_ = !!value;
}
@synthesize token;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasMessage {
  return !!hasMessage_;
}
- (void) setHasMessage:(BOOL) value {
  hasMessage_ = !!value;
}
@synthesize message;
- (void) dealloc {
  self.token = nil;
  self.message = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.token = @"";
    self.userId = 0;
    self.message = [Message defaultInstance];
  }
  return self;
}
static SendMessageRequest* defaultSendMessageRequestInstance = nil;
+ (void) initialize {
  if (self == [SendMessageRequest class]) {
    defaultSendMessageRequestInstance = [[SendMessageRequest alloc] init];
  }
}
+ (SendMessageRequest*) defaultInstance {
  return defaultSendMessageRequestInstance;
}
- (SendMessageRequest*) defaultInstance {
  return defaultSendMessageRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasToken) {
    [output writeString:1 value:self.token];
  }
  if (self.hasUserId) {
    [output writeInt32:2 value:self.userId];
  }
  if (self.hasMessage) {
    [output writeMessage:3 value:self.message];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasToken) {
    size += computeStringSize(1, self.token);
  }
  if (self.hasUserId) {
    size += computeInt32Size(2, self.userId);
  }
  if (self.hasMessage) {
    size += computeMessageSize(3, self.message);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SendMessageRequest*) parseFromData:(NSData*) data {
  return (SendMessageRequest*)[[[SendMessageRequest builder] mergeFromData:data] build];
}
+ (SendMessageRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendMessageRequest*)[[[SendMessageRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SendMessageRequest*) parseFromInputStream:(NSInputStream*) input {
  return (SendMessageRequest*)[[[SendMessageRequest builder] mergeFromInputStream:input] build];
}
+ (SendMessageRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendMessageRequest*)[[[SendMessageRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SendMessageRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SendMessageRequest*)[[[SendMessageRequest builder] mergeFromCodedInputStream:input] build];
}
+ (SendMessageRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendMessageRequest*)[[[SendMessageRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SendMessageRequest_Builder*) builder {
  return [[[SendMessageRequest_Builder alloc] init] autorelease];
}
+ (SendMessageRequest_Builder*) builderWithPrototype:(SendMessageRequest*) prototype {
  return [[SendMessageRequest builder] mergeFrom:prototype];
}
- (SendMessageRequest_Builder*) builder {
  return [SendMessageRequest builder];
}
@end

@interface SendMessageRequest_Builder()
@property (retain) SendMessageRequest* result;
@end

@implementation SendMessageRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SendMessageRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SendMessageRequest_Builder*) clear {
  self.result = [[[SendMessageRequest alloc] init] autorelease];
  return self;
}
- (SendMessageRequest_Builder*) clone {
  return [SendMessageRequest builderWithPrototype:result];
}
- (SendMessageRequest*) defaultInstance {
  return [SendMessageRequest defaultInstance];
}
- (SendMessageRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SendMessageRequest*) buildPartial {
  SendMessageRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SendMessageRequest_Builder*) mergeFrom:(SendMessageRequest*) other {
  if (other == [SendMessageRequest defaultInstance]) {
    return self;
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasMessage) {
    [self mergeMessage:other.message];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SendMessageRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SendMessageRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setToken:[input readString]];
        break;
      }
      case 16: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 26: {
        Message_Builder* subBuilder = [Message builder];
        if (self.hasMessage) {
          [subBuilder mergeFrom:self.message];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMessage:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasToken {
  return result.hasToken;
}
- (NSString*) token {
  return result.token;
}
- (SendMessageRequest_Builder*) setToken:(NSString*) value {
  result.hasToken = YES;
  result.token = value;
  return self;
}
- (SendMessageRequest_Builder*) clearToken {
  result.hasToken = NO;
  result.token = @"";
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (SendMessageRequest_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (SendMessageRequest_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasMessage {
  return result.hasMessage;
}
- (Message*) message {
  return result.message;
}
- (SendMessageRequest_Builder*) setMessage:(Message*) value {
  result.hasMessage = YES;
  result.message = value;
  return self;
}
- (SendMessageRequest_Builder*) setMessageBuilder:(Message_Builder*) builderForValue {
  return [self setMessage:[builderForValue build]];
}
- (SendMessageRequest_Builder*) mergeMessage:(Message*) value {
  if (result.hasMessage &&
      result.message != [Message defaultInstance]) {
    result.message =
      [[[Message builderWithPrototype:result.message] mergeFrom:value] buildPartial];
  } else {
    result.message = value;
  }
  result.hasMessage = YES;
  return self;
}
- (SendMessageRequest_Builder*) clearMessage {
  result.hasMessage = NO;
  result.message = [Message defaultInstance];
  return self;
}
@end

@interface SendMessageResponse ()
@property BOOL isSucceed;
@property int32_t errorCode;
@end

@implementation SendMessageResponse

- (BOOL) hasIsSucceed {
  return !!hasIsSucceed_;
}
- (void) setHasIsSucceed:(BOOL) value {
  hasIsSucceed_ = !!value;
}
- (BOOL) isSucceed {
  return !!isSucceed_;
}
- (void) setIsSucceed:(BOOL) value {
  isSucceed_ = !!value;
}
- (BOOL) hasErrorCode {
  return !!hasErrorCode_;
}
- (void) setHasErrorCode:(BOOL) value {
  hasErrorCode_ = !!value;
}
@synthesize errorCode;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.isSucceed = NO;
    self.errorCode = 0;
  }
  return self;
}
static SendMessageResponse* defaultSendMessageResponseInstance = nil;
+ (void) initialize {
  if (self == [SendMessageResponse class]) {
    defaultSendMessageResponseInstance = [[SendMessageResponse alloc] init];
  }
}
+ (SendMessageResponse*) defaultInstance {
  return defaultSendMessageResponseInstance;
}
- (SendMessageResponse*) defaultInstance {
  return defaultSendMessageResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsSucceed) {
    [output writeBool:1 value:self.isSucceed];
  }
  if (self.hasErrorCode) {
    [output writeInt32:2 value:self.errorCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasIsSucceed) {
    size += computeBoolSize(1, self.isSucceed);
  }
  if (self.hasErrorCode) {
    size += computeInt32Size(2, self.errorCode);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SendMessageResponse*) parseFromData:(NSData*) data {
  return (SendMessageResponse*)[[[SendMessageResponse builder] mergeFromData:data] build];
}
+ (SendMessageResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendMessageResponse*)[[[SendMessageResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SendMessageResponse*) parseFromInputStream:(NSInputStream*) input {
  return (SendMessageResponse*)[[[SendMessageResponse builder] mergeFromInputStream:input] build];
}
+ (SendMessageResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendMessageResponse*)[[[SendMessageResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SendMessageResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SendMessageResponse*)[[[SendMessageResponse builder] mergeFromCodedInputStream:input] build];
}
+ (SendMessageResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendMessageResponse*)[[[SendMessageResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SendMessageResponse_Builder*) builder {
  return [[[SendMessageResponse_Builder alloc] init] autorelease];
}
+ (SendMessageResponse_Builder*) builderWithPrototype:(SendMessageResponse*) prototype {
  return [[SendMessageResponse builder] mergeFrom:prototype];
}
- (SendMessageResponse_Builder*) builder {
  return [SendMessageResponse builder];
}
@end

@interface SendMessageResponse_Builder()
@property (retain) SendMessageResponse* result;
@end

@implementation SendMessageResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SendMessageResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SendMessageResponse_Builder*) clear {
  self.result = [[[SendMessageResponse alloc] init] autorelease];
  return self;
}
- (SendMessageResponse_Builder*) clone {
  return [SendMessageResponse builderWithPrototype:result];
}
- (SendMessageResponse*) defaultInstance {
  return [SendMessageResponse defaultInstance];
}
- (SendMessageResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SendMessageResponse*) buildPartial {
  SendMessageResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SendMessageResponse_Builder*) mergeFrom:(SendMessageResponse*) other {
  if (other == [SendMessageResponse defaultInstance]) {
    return self;
  }
  if (other.hasIsSucceed) {
    [self setIsSucceed:other.isSucceed];
  }
  if (other.hasErrorCode) {
    [self setErrorCode:other.errorCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SendMessageResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SendMessageResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIsSucceed:[input readBool]];
        break;
      }
      case 16: {
        [self setErrorCode:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasIsSucceed {
  return result.hasIsSucceed;
}
- (BOOL) isSucceed {
  return result.isSucceed;
}
- (SendMessageResponse_Builder*) setIsSucceed:(BOOL) value {
  result.hasIsSucceed = YES;
  result.isSucceed = value;
  return self;
}
- (SendMessageResponse_Builder*) clearIsSucceed {
  result.hasIsSucceed = NO;
  result.isSucceed = NO;
  return self;
}
- (BOOL) hasErrorCode {
  return result.hasErrorCode;
}
- (int32_t) errorCode {
  return result.errorCode;
}
- (SendMessageResponse_Builder*) setErrorCode:(int32_t) value {
  result.hasErrorCode = YES;
  result.errorCode = value;
  return self;
}
- (SendMessageResponse_Builder*) clearErrorCode {
  result.hasErrorCode = NO;
  result.errorCode = 0;
  return self;
}
@end

@interface RegisterRequest ()
@property (retain) NSString* mobilePhoneNumber;
@property (retain) NSString* name;
@property (retain) NSString* password;
@property (retain) NSString* passwordConfirm;
@property (retain) NSString* validateCode;
@end

@implementation RegisterRequest

- (BOOL) hasMobilePhoneNumber {
  return !!hasMobilePhoneNumber_;
}
- (void) setHasMobilePhoneNumber:(BOOL) value {
  hasMobilePhoneNumber_ = !!value;
}
@synthesize mobilePhoneNumber;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasPassword {
  return !!hasPassword_;
}
- (void) setHasPassword:(BOOL) value {
  hasPassword_ = !!value;
}
@synthesize password;
- (BOOL) hasPasswordConfirm {
  return !!hasPasswordConfirm_;
}
- (void) setHasPasswordConfirm:(BOOL) value {
  hasPasswordConfirm_ = !!value;
}
@synthesize passwordConfirm;
- (BOOL) hasValidateCode {
  return !!hasValidateCode_;
}
- (void) setHasValidateCode:(BOOL) value {
  hasValidateCode_ = !!value;
}
@synthesize validateCode;
- (void) dealloc {
  self.mobilePhoneNumber = nil;
  self.name = nil;
  self.password = nil;
  self.passwordConfirm = nil;
  self.validateCode = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.mobilePhoneNumber = @"";
    self.name = @"";
    self.password = @"";
    self.passwordConfirm = @"";
    self.validateCode = @"";
  }
  return self;
}
static RegisterRequest* defaultRegisterRequestInstance = nil;
+ (void) initialize {
  if (self == [RegisterRequest class]) {
    defaultRegisterRequestInstance = [[RegisterRequest alloc] init];
  }
}
+ (RegisterRequest*) defaultInstance {
  return defaultRegisterRequestInstance;
}
- (RegisterRequest*) defaultInstance {
  return defaultRegisterRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMobilePhoneNumber) {
    [output writeString:1 value:self.mobilePhoneNumber];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasPassword) {
    [output writeString:3 value:self.password];
  }
  if (self.hasPasswordConfirm) {
    [output writeString:4 value:self.passwordConfirm];
  }
  if (self.hasValidateCode) {
    [output writeString:5 value:self.validateCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasMobilePhoneNumber) {
    size += computeStringSize(1, self.mobilePhoneNumber);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasPassword) {
    size += computeStringSize(3, self.password);
  }
  if (self.hasPasswordConfirm) {
    size += computeStringSize(4, self.passwordConfirm);
  }
  if (self.hasValidateCode) {
    size += computeStringSize(5, self.validateCode);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RegisterRequest*) parseFromData:(NSData*) data {
  return (RegisterRequest*)[[[RegisterRequest builder] mergeFromData:data] build];
}
+ (RegisterRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RegisterRequest*)[[[RegisterRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RegisterRequest*) parseFromInputStream:(NSInputStream*) input {
  return (RegisterRequest*)[[[RegisterRequest builder] mergeFromInputStream:input] build];
}
+ (RegisterRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RegisterRequest*)[[[RegisterRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RegisterRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RegisterRequest*)[[[RegisterRequest builder] mergeFromCodedInputStream:input] build];
}
+ (RegisterRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RegisterRequest*)[[[RegisterRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RegisterRequest_Builder*) builder {
  return [[[RegisterRequest_Builder alloc] init] autorelease];
}
+ (RegisterRequest_Builder*) builderWithPrototype:(RegisterRequest*) prototype {
  return [[RegisterRequest builder] mergeFrom:prototype];
}
- (RegisterRequest_Builder*) builder {
  return [RegisterRequest builder];
}
@end

@interface RegisterRequest_Builder()
@property (retain) RegisterRequest* result;
@end

@implementation RegisterRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RegisterRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RegisterRequest_Builder*) clear {
  self.result = [[[RegisterRequest alloc] init] autorelease];
  return self;
}
- (RegisterRequest_Builder*) clone {
  return [RegisterRequest builderWithPrototype:result];
}
- (RegisterRequest*) defaultInstance {
  return [RegisterRequest defaultInstance];
}
- (RegisterRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RegisterRequest*) buildPartial {
  RegisterRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RegisterRequest_Builder*) mergeFrom:(RegisterRequest*) other {
  if (other == [RegisterRequest defaultInstance]) {
    return self;
  }
  if (other.hasMobilePhoneNumber) {
    [self setMobilePhoneNumber:other.mobilePhoneNumber];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasPassword) {
    [self setPassword:other.password];
  }
  if (other.hasPasswordConfirm) {
    [self setPasswordConfirm:other.passwordConfirm];
  }
  if (other.hasValidateCode) {
    [self setValidateCode:other.validateCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RegisterRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RegisterRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setMobilePhoneNumber:[input readString]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setPassword:[input readString]];
        break;
      }
      case 34: {
        [self setPasswordConfirm:[input readString]];
        break;
      }
      case 42: {
        [self setValidateCode:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasMobilePhoneNumber {
  return result.hasMobilePhoneNumber;
}
- (NSString*) mobilePhoneNumber {
  return result.mobilePhoneNumber;
}
- (RegisterRequest_Builder*) setMobilePhoneNumber:(NSString*) value {
  result.hasMobilePhoneNumber = YES;
  result.mobilePhoneNumber = value;
  return self;
}
- (RegisterRequest_Builder*) clearMobilePhoneNumber {
  result.hasMobilePhoneNumber = NO;
  result.mobilePhoneNumber = @"";
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (RegisterRequest_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (RegisterRequest_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasPassword {
  return result.hasPassword;
}
- (NSString*) password {
  return result.password;
}
- (RegisterRequest_Builder*) setPassword:(NSString*) value {
  result.hasPassword = YES;
  result.password = value;
  return self;
}
- (RegisterRequest_Builder*) clearPassword {
  result.hasPassword = NO;
  result.password = @"";
  return self;
}
- (BOOL) hasPasswordConfirm {
  return result.hasPasswordConfirm;
}
- (NSString*) passwordConfirm {
  return result.passwordConfirm;
}
- (RegisterRequest_Builder*) setPasswordConfirm:(NSString*) value {
  result.hasPasswordConfirm = YES;
  result.passwordConfirm = value;
  return self;
}
- (RegisterRequest_Builder*) clearPasswordConfirm {
  result.hasPasswordConfirm = NO;
  result.passwordConfirm = @"";
  return self;
}
- (BOOL) hasValidateCode {
  return result.hasValidateCode;
}
- (NSString*) validateCode {
  return result.validateCode;
}
- (RegisterRequest_Builder*) setValidateCode:(NSString*) value {
  result.hasValidateCode = YES;
  result.validateCode = value;
  return self;
}
- (RegisterRequest_Builder*) clearValidateCode {
  result.hasValidateCode = NO;
  result.validateCode = @"";
  return self;
}
@end

@interface RegisterResponse ()
@property BOOL isSucceed;
@property int32_t userId;
@property RegisterResponse_ErrorCodeType errorCode;
@end

@implementation RegisterResponse

- (BOOL) hasIsSucceed {
  return !!hasIsSucceed_;
}
- (void) setHasIsSucceed:(BOOL) value {
  hasIsSucceed_ = !!value;
}
- (BOOL) isSucceed {
  return !!isSucceed_;
}
- (void) setIsSucceed:(BOOL) value {
  isSucceed_ = !!value;
}
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasErrorCode {
  return !!hasErrorCode_;
}
- (void) setHasErrorCode:(BOOL) value {
  hasErrorCode_ = !!value;
}
@synthesize errorCode;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.isSucceed = NO;
    self.userId = 0;
    self.errorCode = RegisterResponse_ErrorCodeTypeInvalidUserName;
  }
  return self;
}
static RegisterResponse* defaultRegisterResponseInstance = nil;
+ (void) initialize {
  if (self == [RegisterResponse class]) {
    defaultRegisterResponseInstance = [[RegisterResponse alloc] init];
  }
}
+ (RegisterResponse*) defaultInstance {
  return defaultRegisterResponseInstance;
}
- (RegisterResponse*) defaultInstance {
  return defaultRegisterResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsSucceed) {
    [output writeBool:1 value:self.isSucceed];
  }
  if (self.hasUserId) {
    [output writeInt32:2 value:self.userId];
  }
  if (self.hasErrorCode) {
    [output writeEnum:3 value:self.errorCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasIsSucceed) {
    size += computeBoolSize(1, self.isSucceed);
  }
  if (self.hasUserId) {
    size += computeInt32Size(2, self.userId);
  }
  if (self.hasErrorCode) {
    size += computeEnumSize(3, self.errorCode);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RegisterResponse*) parseFromData:(NSData*) data {
  return (RegisterResponse*)[[[RegisterResponse builder] mergeFromData:data] build];
}
+ (RegisterResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RegisterResponse*)[[[RegisterResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RegisterResponse*) parseFromInputStream:(NSInputStream*) input {
  return (RegisterResponse*)[[[RegisterResponse builder] mergeFromInputStream:input] build];
}
+ (RegisterResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RegisterResponse*)[[[RegisterResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RegisterResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RegisterResponse*)[[[RegisterResponse builder] mergeFromCodedInputStream:input] build];
}
+ (RegisterResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RegisterResponse*)[[[RegisterResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RegisterResponse_Builder*) builder {
  return [[[RegisterResponse_Builder alloc] init] autorelease];
}
+ (RegisterResponse_Builder*) builderWithPrototype:(RegisterResponse*) prototype {
  return [[RegisterResponse builder] mergeFrom:prototype];
}
- (RegisterResponse_Builder*) builder {
  return [RegisterResponse builder];
}
@end

BOOL RegisterResponse_ErrorCodeTypeIsValidValue(RegisterResponse_ErrorCodeType value) {
  switch (value) {
    case RegisterResponse_ErrorCodeTypeInvalidUserName:
    case RegisterResponse_ErrorCodeTypeExistingUserYes:
    case RegisterResponse_ErrorCodeTypeInvalidPassword:
    case RegisterResponse_ErrorCodeTypeInvalidConfirmPassword:
    case RegisterResponse_ErrorCodeTypeInvalidMatchPassword:
    case RegisterResponse_ErrorCodeTypeInvalidValidateCode:
    case RegisterResponse_ErrorCodeTypeInvalidDatabase:
      return YES;
    default:
      return NO;
  }
}
@interface RegisterResponse_Builder()
@property (retain) RegisterResponse* result;
@end

@implementation RegisterResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RegisterResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RegisterResponse_Builder*) clear {
  self.result = [[[RegisterResponse alloc] init] autorelease];
  return self;
}
- (RegisterResponse_Builder*) clone {
  return [RegisterResponse builderWithPrototype:result];
}
- (RegisterResponse*) defaultInstance {
  return [RegisterResponse defaultInstance];
}
- (RegisterResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RegisterResponse*) buildPartial {
  RegisterResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RegisterResponse_Builder*) mergeFrom:(RegisterResponse*) other {
  if (other == [RegisterResponse defaultInstance]) {
    return self;
  }
  if (other.hasIsSucceed) {
    [self setIsSucceed:other.isSucceed];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasErrorCode) {
    [self setErrorCode:other.errorCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RegisterResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RegisterResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIsSucceed:[input readBool]];
        break;
      }
      case 16: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (RegisterResponse_ErrorCodeTypeIsValidValue(value)) {
          [self setErrorCode:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasIsSucceed {
  return result.hasIsSucceed;
}
- (BOOL) isSucceed {
  return result.isSucceed;
}
- (RegisterResponse_Builder*) setIsSucceed:(BOOL) value {
  result.hasIsSucceed = YES;
  result.isSucceed = value;
  return self;
}
- (RegisterResponse_Builder*) clearIsSucceed {
  result.hasIsSucceed = NO;
  result.isSucceed = NO;
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (RegisterResponse_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (RegisterResponse_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasErrorCode {
  return result.hasErrorCode;
}
- (RegisterResponse_ErrorCodeType) errorCode {
  return result.errorCode;
}
- (RegisterResponse_Builder*) setErrorCode:(RegisterResponse_ErrorCodeType) value {
  result.hasErrorCode = YES;
  result.errorCode = value;
  return self;
}
- (RegisterResponse_Builder*) clearErrorCode {
  result.hasErrorCode = NO;
  result.errorCode = RegisterResponse_ErrorCodeTypeInvalidUserName;
  return self;
}
@end

@interface ChangePasswordRequest ()
@property (retain) NSString* token;
@property int32_t userId;
@property (retain) NSString* validateCode;
@property (retain) NSString* originalPassword;
@property (retain) NSString* password;
@property (retain) NSString* passwordConfirm;
@end

@implementation ChangePasswordRequest

- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) value {
  hasToken_ = !!value;
}
@synthesize token;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasValidateCode {
  return !!hasValidateCode_;
}
- (void) setHasValidateCode:(BOOL) value {
  hasValidateCode_ = !!value;
}
@synthesize validateCode;
- (BOOL) hasOriginalPassword {
  return !!hasOriginalPassword_;
}
- (void) setHasOriginalPassword:(BOOL) value {
  hasOriginalPassword_ = !!value;
}
@synthesize originalPassword;
- (BOOL) hasPassword {
  return !!hasPassword_;
}
- (void) setHasPassword:(BOOL) value {
  hasPassword_ = !!value;
}
@synthesize password;
- (BOOL) hasPasswordConfirm {
  return !!hasPasswordConfirm_;
}
- (void) setHasPasswordConfirm:(BOOL) value {
  hasPasswordConfirm_ = !!value;
}
@synthesize passwordConfirm;
- (void) dealloc {
  self.token = nil;
  self.validateCode = nil;
  self.originalPassword = nil;
  self.password = nil;
  self.passwordConfirm = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.token = @"";
    self.userId = 0;
    self.validateCode = @"";
    self.originalPassword = @"";
    self.password = @"";
    self.passwordConfirm = @"";
  }
  return self;
}
static ChangePasswordRequest* defaultChangePasswordRequestInstance = nil;
+ (void) initialize {
  if (self == [ChangePasswordRequest class]) {
    defaultChangePasswordRequestInstance = [[ChangePasswordRequest alloc] init];
  }
}
+ (ChangePasswordRequest*) defaultInstance {
  return defaultChangePasswordRequestInstance;
}
- (ChangePasswordRequest*) defaultInstance {
  return defaultChangePasswordRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasToken) {
    [output writeString:1 value:self.token];
  }
  if (self.hasUserId) {
    [output writeInt32:2 value:self.userId];
  }
  if (self.hasValidateCode) {
    [output writeString:3 value:self.validateCode];
  }
  if (self.hasOriginalPassword) {
    [output writeString:4 value:self.originalPassword];
  }
  if (self.hasPassword) {
    [output writeString:5 value:self.password];
  }
  if (self.hasPasswordConfirm) {
    [output writeString:6 value:self.passwordConfirm];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasToken) {
    size += computeStringSize(1, self.token);
  }
  if (self.hasUserId) {
    size += computeInt32Size(2, self.userId);
  }
  if (self.hasValidateCode) {
    size += computeStringSize(3, self.validateCode);
  }
  if (self.hasOriginalPassword) {
    size += computeStringSize(4, self.originalPassword);
  }
  if (self.hasPassword) {
    size += computeStringSize(5, self.password);
  }
  if (self.hasPasswordConfirm) {
    size += computeStringSize(6, self.passwordConfirm);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ChangePasswordRequest*) parseFromData:(NSData*) data {
  return (ChangePasswordRequest*)[[[ChangePasswordRequest builder] mergeFromData:data] build];
}
+ (ChangePasswordRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangePasswordRequest*)[[[ChangePasswordRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ChangePasswordRequest*) parseFromInputStream:(NSInputStream*) input {
  return (ChangePasswordRequest*)[[[ChangePasswordRequest builder] mergeFromInputStream:input] build];
}
+ (ChangePasswordRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangePasswordRequest*)[[[ChangePasswordRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangePasswordRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ChangePasswordRequest*)[[[ChangePasswordRequest builder] mergeFromCodedInputStream:input] build];
}
+ (ChangePasswordRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangePasswordRequest*)[[[ChangePasswordRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangePasswordRequest_Builder*) builder {
  return [[[ChangePasswordRequest_Builder alloc] init] autorelease];
}
+ (ChangePasswordRequest_Builder*) builderWithPrototype:(ChangePasswordRequest*) prototype {
  return [[ChangePasswordRequest builder] mergeFrom:prototype];
}
- (ChangePasswordRequest_Builder*) builder {
  return [ChangePasswordRequest builder];
}
@end

@interface ChangePasswordRequest_Builder()
@property (retain) ChangePasswordRequest* result;
@end

@implementation ChangePasswordRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ChangePasswordRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ChangePasswordRequest_Builder*) clear {
  self.result = [[[ChangePasswordRequest alloc] init] autorelease];
  return self;
}
- (ChangePasswordRequest_Builder*) clone {
  return [ChangePasswordRequest builderWithPrototype:result];
}
- (ChangePasswordRequest*) defaultInstance {
  return [ChangePasswordRequest defaultInstance];
}
- (ChangePasswordRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ChangePasswordRequest*) buildPartial {
  ChangePasswordRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ChangePasswordRequest_Builder*) mergeFrom:(ChangePasswordRequest*) other {
  if (other == [ChangePasswordRequest defaultInstance]) {
    return self;
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasValidateCode) {
    [self setValidateCode:other.validateCode];
  }
  if (other.hasOriginalPassword) {
    [self setOriginalPassword:other.originalPassword];
  }
  if (other.hasPassword) {
    [self setPassword:other.password];
  }
  if (other.hasPasswordConfirm) {
    [self setPasswordConfirm:other.passwordConfirm];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChangePasswordRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChangePasswordRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setToken:[input readString]];
        break;
      }
      case 16: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 26: {
        [self setValidateCode:[input readString]];
        break;
      }
      case 34: {
        [self setOriginalPassword:[input readString]];
        break;
      }
      case 42: {
        [self setPassword:[input readString]];
        break;
      }
      case 50: {
        [self setPasswordConfirm:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasToken {
  return result.hasToken;
}
- (NSString*) token {
  return result.token;
}
- (ChangePasswordRequest_Builder*) setToken:(NSString*) value {
  result.hasToken = YES;
  result.token = value;
  return self;
}
- (ChangePasswordRequest_Builder*) clearToken {
  result.hasToken = NO;
  result.token = @"";
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (ChangePasswordRequest_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (ChangePasswordRequest_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasValidateCode {
  return result.hasValidateCode;
}
- (NSString*) validateCode {
  return result.validateCode;
}
- (ChangePasswordRequest_Builder*) setValidateCode:(NSString*) value {
  result.hasValidateCode = YES;
  result.validateCode = value;
  return self;
}
- (ChangePasswordRequest_Builder*) clearValidateCode {
  result.hasValidateCode = NO;
  result.validateCode = @"";
  return self;
}
- (BOOL) hasOriginalPassword {
  return result.hasOriginalPassword;
}
- (NSString*) originalPassword {
  return result.originalPassword;
}
- (ChangePasswordRequest_Builder*) setOriginalPassword:(NSString*) value {
  result.hasOriginalPassword = YES;
  result.originalPassword = value;
  return self;
}
- (ChangePasswordRequest_Builder*) clearOriginalPassword {
  result.hasOriginalPassword = NO;
  result.originalPassword = @"";
  return self;
}
- (BOOL) hasPassword {
  return result.hasPassword;
}
- (NSString*) password {
  return result.password;
}
- (ChangePasswordRequest_Builder*) setPassword:(NSString*) value {
  result.hasPassword = YES;
  result.password = value;
  return self;
}
- (ChangePasswordRequest_Builder*) clearPassword {
  result.hasPassword = NO;
  result.password = @"";
  return self;
}
- (BOOL) hasPasswordConfirm {
  return result.hasPasswordConfirm;
}
- (NSString*) passwordConfirm {
  return result.passwordConfirm;
}
- (ChangePasswordRequest_Builder*) setPasswordConfirm:(NSString*) value {
  result.hasPasswordConfirm = YES;
  result.passwordConfirm = value;
  return self;
}
- (ChangePasswordRequest_Builder*) clearPasswordConfirm {
  result.hasPasswordConfirm = NO;
  result.passwordConfirm = @"";
  return self;
}
@end

@interface ChangePasswordResponse ()
@property BOOL isSucceed;
@property ChangePasswordResponse_ErrorCodeType errorCode;
@end

@implementation ChangePasswordResponse

- (BOOL) hasIsSucceed {
  return !!hasIsSucceed_;
}
- (void) setHasIsSucceed:(BOOL) value {
  hasIsSucceed_ = !!value;
}
- (BOOL) isSucceed {
  return !!isSucceed_;
}
- (void) setIsSucceed:(BOOL) value {
  isSucceed_ = !!value;
}
- (BOOL) hasErrorCode {
  return !!hasErrorCode_;
}
- (void) setHasErrorCode:(BOOL) value {
  hasErrorCode_ = !!value;
}
@synthesize errorCode;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.isSucceed = NO;
    self.errorCode = ChangePasswordResponse_ErrorCodeTypeInvalidUserId;
  }
  return self;
}
static ChangePasswordResponse* defaultChangePasswordResponseInstance = nil;
+ (void) initialize {
  if (self == [ChangePasswordResponse class]) {
    defaultChangePasswordResponseInstance = [[ChangePasswordResponse alloc] init];
  }
}
+ (ChangePasswordResponse*) defaultInstance {
  return defaultChangePasswordResponseInstance;
}
- (ChangePasswordResponse*) defaultInstance {
  return defaultChangePasswordResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsSucceed) {
    [output writeBool:1 value:self.isSucceed];
  }
  if (self.hasErrorCode) {
    [output writeEnum:2 value:self.errorCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasIsSucceed) {
    size += computeBoolSize(1, self.isSucceed);
  }
  if (self.hasErrorCode) {
    size += computeEnumSize(2, self.errorCode);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ChangePasswordResponse*) parseFromData:(NSData*) data {
  return (ChangePasswordResponse*)[[[ChangePasswordResponse builder] mergeFromData:data] build];
}
+ (ChangePasswordResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangePasswordResponse*)[[[ChangePasswordResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ChangePasswordResponse*) parseFromInputStream:(NSInputStream*) input {
  return (ChangePasswordResponse*)[[[ChangePasswordResponse builder] mergeFromInputStream:input] build];
}
+ (ChangePasswordResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangePasswordResponse*)[[[ChangePasswordResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangePasswordResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ChangePasswordResponse*)[[[ChangePasswordResponse builder] mergeFromCodedInputStream:input] build];
}
+ (ChangePasswordResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChangePasswordResponse*)[[[ChangePasswordResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChangePasswordResponse_Builder*) builder {
  return [[[ChangePasswordResponse_Builder alloc] init] autorelease];
}
+ (ChangePasswordResponse_Builder*) builderWithPrototype:(ChangePasswordResponse*) prototype {
  return [[ChangePasswordResponse builder] mergeFrom:prototype];
}
- (ChangePasswordResponse_Builder*) builder {
  return [ChangePasswordResponse builder];
}
@end

BOOL ChangePasswordResponse_ErrorCodeTypeIsValidValue(ChangePasswordResponse_ErrorCodeType value) {
  switch (value) {
    case ChangePasswordResponse_ErrorCodeTypeInvalidUserId:
    case ChangePasswordResponse_ErrorCodeTypeInvalidToken:
    case ChangePasswordResponse_ErrorCodeTypeAuthError:
    case ChangePasswordResponse_ErrorCodeTypeExistingUserNo:
    case ChangePasswordResponse_ErrorCodeTypeInvalidOriginalPassword:
    case ChangePasswordResponse_ErrorCodeTypeInvalidPassword:
    case ChangePasswordResponse_ErrorCodeTypeInvalidConfirmPassword:
    case ChangePasswordResponse_ErrorCodeTypeInvalidMatchPassword:
    case ChangePasswordResponse_ErrorCodeTypeInvalidValidateCode:
    case ChangePasswordResponse_ErrorCodeTypeInvalidDatabase:
      return YES;
    default:
      return NO;
  }
}
@interface ChangePasswordResponse_Builder()
@property (retain) ChangePasswordResponse* result;
@end

@implementation ChangePasswordResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ChangePasswordResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ChangePasswordResponse_Builder*) clear {
  self.result = [[[ChangePasswordResponse alloc] init] autorelease];
  return self;
}
- (ChangePasswordResponse_Builder*) clone {
  return [ChangePasswordResponse builderWithPrototype:result];
}
- (ChangePasswordResponse*) defaultInstance {
  return [ChangePasswordResponse defaultInstance];
}
- (ChangePasswordResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ChangePasswordResponse*) buildPartial {
  ChangePasswordResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ChangePasswordResponse_Builder*) mergeFrom:(ChangePasswordResponse*) other {
  if (other == [ChangePasswordResponse defaultInstance]) {
    return self;
  }
  if (other.hasIsSucceed) {
    [self setIsSucceed:other.isSucceed];
  }
  if (other.hasErrorCode) {
    [self setErrorCode:other.errorCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChangePasswordResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChangePasswordResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIsSucceed:[input readBool]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (ChangePasswordResponse_ErrorCodeTypeIsValidValue(value)) {
          [self setErrorCode:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasIsSucceed {
  return result.hasIsSucceed;
}
- (BOOL) isSucceed {
  return result.isSucceed;
}
- (ChangePasswordResponse_Builder*) setIsSucceed:(BOOL) value {
  result.hasIsSucceed = YES;
  result.isSucceed = value;
  return self;
}
- (ChangePasswordResponse_Builder*) clearIsSucceed {
  result.hasIsSucceed = NO;
  result.isSucceed = NO;
  return self;
}
- (BOOL) hasErrorCode {
  return result.hasErrorCode;
}
- (ChangePasswordResponse_ErrorCodeType) errorCode {
  return result.errorCode;
}
- (ChangePasswordResponse_Builder*) setErrorCode:(ChangePasswordResponse_ErrorCodeType) value {
  result.hasErrorCode = YES;
  result.errorCode = value;
  return self;
}
- (ChangePasswordResponse_Builder*) clearErrorCode {
  result.hasErrorCode = NO;
  result.errorCode = ChangePasswordResponse_ErrorCodeTypeInvalidUserId;
  return self;
}
@end

@interface ResetPasswordRequest ()
@property (retain) NSString* phoneNumber;
@property (retain) NSString* validateCode;
@property (retain) NSString* password;
@property (retain) NSString* passwordConfirm;
@end

@implementation ResetPasswordRequest

- (BOOL) hasPhoneNumber {
  return !!hasPhoneNumber_;
}
- (void) setHasPhoneNumber:(BOOL) value {
  hasPhoneNumber_ = !!value;
}
@synthesize phoneNumber;
- (BOOL) hasValidateCode {
  return !!hasValidateCode_;
}
- (void) setHasValidateCode:(BOOL) value {
  hasValidateCode_ = !!value;
}
@synthesize validateCode;
- (BOOL) hasPassword {
  return !!hasPassword_;
}
- (void) setHasPassword:(BOOL) value {
  hasPassword_ = !!value;
}
@synthesize password;
- (BOOL) hasPasswordConfirm {
  return !!hasPasswordConfirm_;
}
- (void) setHasPasswordConfirm:(BOOL) value {
  hasPasswordConfirm_ = !!value;
}
@synthesize passwordConfirm;
- (void) dealloc {
  self.phoneNumber = nil;
  self.validateCode = nil;
  self.password = nil;
  self.passwordConfirm = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.phoneNumber = @"";
    self.validateCode = @"";
    self.password = @"";
    self.passwordConfirm = @"";
  }
  return self;
}
static ResetPasswordRequest* defaultResetPasswordRequestInstance = nil;
+ (void) initialize {
  if (self == [ResetPasswordRequest class]) {
    defaultResetPasswordRequestInstance = [[ResetPasswordRequest alloc] init];
  }
}
+ (ResetPasswordRequest*) defaultInstance {
  return defaultResetPasswordRequestInstance;
}
- (ResetPasswordRequest*) defaultInstance {
  return defaultResetPasswordRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPhoneNumber) {
    [output writeString:1 value:self.phoneNumber];
  }
  if (self.hasValidateCode) {
    [output writeString:2 value:self.validateCode];
  }
  if (self.hasPassword) {
    [output writeString:3 value:self.password];
  }
  if (self.hasPasswordConfirm) {
    [output writeString:4 value:self.passwordConfirm];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPhoneNumber) {
    size += computeStringSize(1, self.phoneNumber);
  }
  if (self.hasValidateCode) {
    size += computeStringSize(2, self.validateCode);
  }
  if (self.hasPassword) {
    size += computeStringSize(3, self.password);
  }
  if (self.hasPasswordConfirm) {
    size += computeStringSize(4, self.passwordConfirm);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ResetPasswordRequest*) parseFromData:(NSData*) data {
  return (ResetPasswordRequest*)[[[ResetPasswordRequest builder] mergeFromData:data] build];
}
+ (ResetPasswordRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResetPasswordRequest*)[[[ResetPasswordRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ResetPasswordRequest*) parseFromInputStream:(NSInputStream*) input {
  return (ResetPasswordRequest*)[[[ResetPasswordRequest builder] mergeFromInputStream:input] build];
}
+ (ResetPasswordRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResetPasswordRequest*)[[[ResetPasswordRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResetPasswordRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ResetPasswordRequest*)[[[ResetPasswordRequest builder] mergeFromCodedInputStream:input] build];
}
+ (ResetPasswordRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResetPasswordRequest*)[[[ResetPasswordRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResetPasswordRequest_Builder*) builder {
  return [[[ResetPasswordRequest_Builder alloc] init] autorelease];
}
+ (ResetPasswordRequest_Builder*) builderWithPrototype:(ResetPasswordRequest*) prototype {
  return [[ResetPasswordRequest builder] mergeFrom:prototype];
}
- (ResetPasswordRequest_Builder*) builder {
  return [ResetPasswordRequest builder];
}
@end

@interface ResetPasswordRequest_Builder()
@property (retain) ResetPasswordRequest* result;
@end

@implementation ResetPasswordRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ResetPasswordRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ResetPasswordRequest_Builder*) clear {
  self.result = [[[ResetPasswordRequest alloc] init] autorelease];
  return self;
}
- (ResetPasswordRequest_Builder*) clone {
  return [ResetPasswordRequest builderWithPrototype:result];
}
- (ResetPasswordRequest*) defaultInstance {
  return [ResetPasswordRequest defaultInstance];
}
- (ResetPasswordRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ResetPasswordRequest*) buildPartial {
  ResetPasswordRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ResetPasswordRequest_Builder*) mergeFrom:(ResetPasswordRequest*) other {
  if (other == [ResetPasswordRequest defaultInstance]) {
    return self;
  }
  if (other.hasPhoneNumber) {
    [self setPhoneNumber:other.phoneNumber];
  }
  if (other.hasValidateCode) {
    [self setValidateCode:other.validateCode];
  }
  if (other.hasPassword) {
    [self setPassword:other.password];
  }
  if (other.hasPasswordConfirm) {
    [self setPasswordConfirm:other.passwordConfirm];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ResetPasswordRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ResetPasswordRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPhoneNumber:[input readString]];
        break;
      }
      case 18: {
        [self setValidateCode:[input readString]];
        break;
      }
      case 26: {
        [self setPassword:[input readString]];
        break;
      }
      case 34: {
        [self setPasswordConfirm:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPhoneNumber {
  return result.hasPhoneNumber;
}
- (NSString*) phoneNumber {
  return result.phoneNumber;
}
- (ResetPasswordRequest_Builder*) setPhoneNumber:(NSString*) value {
  result.hasPhoneNumber = YES;
  result.phoneNumber = value;
  return self;
}
- (ResetPasswordRequest_Builder*) clearPhoneNumber {
  result.hasPhoneNumber = NO;
  result.phoneNumber = @"";
  return self;
}
- (BOOL) hasValidateCode {
  return result.hasValidateCode;
}
- (NSString*) validateCode {
  return result.validateCode;
}
- (ResetPasswordRequest_Builder*) setValidateCode:(NSString*) value {
  result.hasValidateCode = YES;
  result.validateCode = value;
  return self;
}
- (ResetPasswordRequest_Builder*) clearValidateCode {
  result.hasValidateCode = NO;
  result.validateCode = @"";
  return self;
}
- (BOOL) hasPassword {
  return result.hasPassword;
}
- (NSString*) password {
  return result.password;
}
- (ResetPasswordRequest_Builder*) setPassword:(NSString*) value {
  result.hasPassword = YES;
  result.password = value;
  return self;
}
- (ResetPasswordRequest_Builder*) clearPassword {
  result.hasPassword = NO;
  result.password = @"";
  return self;
}
- (BOOL) hasPasswordConfirm {
  return result.hasPasswordConfirm;
}
- (NSString*) passwordConfirm {
  return result.passwordConfirm;
}
- (ResetPasswordRequest_Builder*) setPasswordConfirm:(NSString*) value {
  result.hasPasswordConfirm = YES;
  result.passwordConfirm = value;
  return self;
}
- (ResetPasswordRequest_Builder*) clearPasswordConfirm {
  result.hasPasswordConfirm = NO;
  result.passwordConfirm = @"";
  return self;
}
@end

@interface ResetPasswordResponse ()
@property BOOL isSucceed;
@property ResetPasswordResponse_ErrorCodeType errorCode;
@end

@implementation ResetPasswordResponse

- (BOOL) hasIsSucceed {
  return !!hasIsSucceed_;
}
- (void) setHasIsSucceed:(BOOL) value {
  hasIsSucceed_ = !!value;
}
- (BOOL) isSucceed {
  return !!isSucceed_;
}
- (void) setIsSucceed:(BOOL) value {
  isSucceed_ = !!value;
}
- (BOOL) hasErrorCode {
  return !!hasErrorCode_;
}
- (void) setHasErrorCode:(BOOL) value {
  hasErrorCode_ = !!value;
}
@synthesize errorCode;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.isSucceed = NO;
    self.errorCode = ResetPasswordResponse_ErrorCodeTypeInvalidPhoneNumber;
  }
  return self;
}
static ResetPasswordResponse* defaultResetPasswordResponseInstance = nil;
+ (void) initialize {
  if (self == [ResetPasswordResponse class]) {
    defaultResetPasswordResponseInstance = [[ResetPasswordResponse alloc] init];
  }
}
+ (ResetPasswordResponse*) defaultInstance {
  return defaultResetPasswordResponseInstance;
}
- (ResetPasswordResponse*) defaultInstance {
  return defaultResetPasswordResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsSucceed) {
    [output writeBool:1 value:self.isSucceed];
  }
  if (self.hasErrorCode) {
    [output writeEnum:2 value:self.errorCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasIsSucceed) {
    size += computeBoolSize(1, self.isSucceed);
  }
  if (self.hasErrorCode) {
    size += computeEnumSize(2, self.errorCode);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ResetPasswordResponse*) parseFromData:(NSData*) data {
  return (ResetPasswordResponse*)[[[ResetPasswordResponse builder] mergeFromData:data] build];
}
+ (ResetPasswordResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResetPasswordResponse*)[[[ResetPasswordResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ResetPasswordResponse*) parseFromInputStream:(NSInputStream*) input {
  return (ResetPasswordResponse*)[[[ResetPasswordResponse builder] mergeFromInputStream:input] build];
}
+ (ResetPasswordResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResetPasswordResponse*)[[[ResetPasswordResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResetPasswordResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ResetPasswordResponse*)[[[ResetPasswordResponse builder] mergeFromCodedInputStream:input] build];
}
+ (ResetPasswordResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResetPasswordResponse*)[[[ResetPasswordResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResetPasswordResponse_Builder*) builder {
  return [[[ResetPasswordResponse_Builder alloc] init] autorelease];
}
+ (ResetPasswordResponse_Builder*) builderWithPrototype:(ResetPasswordResponse*) prototype {
  return [[ResetPasswordResponse builder] mergeFrom:prototype];
}
- (ResetPasswordResponse_Builder*) builder {
  return [ResetPasswordResponse builder];
}
@end

BOOL ResetPasswordResponse_ErrorCodeTypeIsValidValue(ResetPasswordResponse_ErrorCodeType value) {
  switch (value) {
    case ResetPasswordResponse_ErrorCodeTypeInvalidPhoneNumber:
    case ResetPasswordResponse_ErrorCodeTypeInvalidPassword:
    case ResetPasswordResponse_ErrorCodeTypeInvalidPasswordConfirm:
    case ResetPasswordResponse_ErrorCodeTypeInvalidMatchPassword:
    case ResetPasswordResponse_ErrorCodeTypeInvalidValidateCode:
    case ResetPasswordResponse_ErrorCodeTypeExistingUserNo:
    case ResetPasswordResponse_ErrorCodeTypeInvalidDatabase:
      return YES;
    default:
      return NO;
  }
}
@interface ResetPasswordResponse_Builder()
@property (retain) ResetPasswordResponse* result;
@end

@implementation ResetPasswordResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ResetPasswordResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ResetPasswordResponse_Builder*) clear {
  self.result = [[[ResetPasswordResponse alloc] init] autorelease];
  return self;
}
- (ResetPasswordResponse_Builder*) clone {
  return [ResetPasswordResponse builderWithPrototype:result];
}
- (ResetPasswordResponse*) defaultInstance {
  return [ResetPasswordResponse defaultInstance];
}
- (ResetPasswordResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ResetPasswordResponse*) buildPartial {
  ResetPasswordResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ResetPasswordResponse_Builder*) mergeFrom:(ResetPasswordResponse*) other {
  if (other == [ResetPasswordResponse defaultInstance]) {
    return self;
  }
  if (other.hasIsSucceed) {
    [self setIsSucceed:other.isSucceed];
  }
  if (other.hasErrorCode) {
    [self setErrorCode:other.errorCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ResetPasswordResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ResetPasswordResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIsSucceed:[input readBool]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (ResetPasswordResponse_ErrorCodeTypeIsValidValue(value)) {
          [self setErrorCode:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasIsSucceed {
  return result.hasIsSucceed;
}
- (BOOL) isSucceed {
  return result.isSucceed;
}
- (ResetPasswordResponse_Builder*) setIsSucceed:(BOOL) value {
  result.hasIsSucceed = YES;
  result.isSucceed = value;
  return self;
}
- (ResetPasswordResponse_Builder*) clearIsSucceed {
  result.hasIsSucceed = NO;
  result.isSucceed = NO;
  return self;
}
- (BOOL) hasErrorCode {
  return result.hasErrorCode;
}
- (ResetPasswordResponse_ErrorCodeType) errorCode {
  return result.errorCode;
}
- (ResetPasswordResponse_Builder*) setErrorCode:(ResetPasswordResponse_ErrorCodeType) value {
  result.hasErrorCode = YES;
  result.errorCode = value;
  return self;
}
- (ResetPasswordResponse_Builder*) clearErrorCode {
  result.hasErrorCode = NO;
  result.errorCode = ResetPasswordResponse_ErrorCodeTypeInvalidPhoneNumber;
  return self;
}
@end

@interface ValidateCodeRequest ()
@property (retain) NSString* phoneNumber;
@property ValidateCodeRequest_ValidateType type;
@end

@implementation ValidateCodeRequest

- (BOOL) hasPhoneNumber {
  return !!hasPhoneNumber_;
}
- (void) setHasPhoneNumber:(BOOL) value {
  hasPhoneNumber_ = !!value;
}
@synthesize phoneNumber;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (void) dealloc {
  self.phoneNumber = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.phoneNumber = @"";
    self.type = ValidateCodeRequest_ValidateTypeRegister;
  }
  return self;
}
static ValidateCodeRequest* defaultValidateCodeRequestInstance = nil;
+ (void) initialize {
  if (self == [ValidateCodeRequest class]) {
    defaultValidateCodeRequestInstance = [[ValidateCodeRequest alloc] init];
  }
}
+ (ValidateCodeRequest*) defaultInstance {
  return defaultValidateCodeRequestInstance;
}
- (ValidateCodeRequest*) defaultInstance {
  return defaultValidateCodeRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPhoneNumber) {
    [output writeString:1 value:self.phoneNumber];
  }
  if (self.hasType) {
    [output writeEnum:2 value:self.type];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPhoneNumber) {
    size += computeStringSize(1, self.phoneNumber);
  }
  if (self.hasType) {
    size += computeEnumSize(2, self.type);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ValidateCodeRequest*) parseFromData:(NSData*) data {
  return (ValidateCodeRequest*)[[[ValidateCodeRequest builder] mergeFromData:data] build];
}
+ (ValidateCodeRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ValidateCodeRequest*)[[[ValidateCodeRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ValidateCodeRequest*) parseFromInputStream:(NSInputStream*) input {
  return (ValidateCodeRequest*)[[[ValidateCodeRequest builder] mergeFromInputStream:input] build];
}
+ (ValidateCodeRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ValidateCodeRequest*)[[[ValidateCodeRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ValidateCodeRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ValidateCodeRequest*)[[[ValidateCodeRequest builder] mergeFromCodedInputStream:input] build];
}
+ (ValidateCodeRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ValidateCodeRequest*)[[[ValidateCodeRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ValidateCodeRequest_Builder*) builder {
  return [[[ValidateCodeRequest_Builder alloc] init] autorelease];
}
+ (ValidateCodeRequest_Builder*) builderWithPrototype:(ValidateCodeRequest*) prototype {
  return [[ValidateCodeRequest builder] mergeFrom:prototype];
}
- (ValidateCodeRequest_Builder*) builder {
  return [ValidateCodeRequest builder];
}
@end

BOOL ValidateCodeRequest_ValidateTypeIsValidValue(ValidateCodeRequest_ValidateType value) {
  switch (value) {
    case ValidateCodeRequest_ValidateTypeRegister:
    case ValidateCodeRequest_ValidateTypeChangePassword:
    case ValidateCodeRequest_ValidateTypeResetPassword:
      return YES;
    default:
      return NO;
  }
}
@interface ValidateCodeRequest_Builder()
@property (retain) ValidateCodeRequest* result;
@end

@implementation ValidateCodeRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ValidateCodeRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ValidateCodeRequest_Builder*) clear {
  self.result = [[[ValidateCodeRequest alloc] init] autorelease];
  return self;
}
- (ValidateCodeRequest_Builder*) clone {
  return [ValidateCodeRequest builderWithPrototype:result];
}
- (ValidateCodeRequest*) defaultInstance {
  return [ValidateCodeRequest defaultInstance];
}
- (ValidateCodeRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ValidateCodeRequest*) buildPartial {
  ValidateCodeRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ValidateCodeRequest_Builder*) mergeFrom:(ValidateCodeRequest*) other {
  if (other == [ValidateCodeRequest defaultInstance]) {
    return self;
  }
  if (other.hasPhoneNumber) {
    [self setPhoneNumber:other.phoneNumber];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ValidateCodeRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ValidateCodeRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPhoneNumber:[input readString]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (ValidateCodeRequest_ValidateTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasPhoneNumber {
  return result.hasPhoneNumber;
}
- (NSString*) phoneNumber {
  return result.phoneNumber;
}
- (ValidateCodeRequest_Builder*) setPhoneNumber:(NSString*) value {
  result.hasPhoneNumber = YES;
  result.phoneNumber = value;
  return self;
}
- (ValidateCodeRequest_Builder*) clearPhoneNumber {
  result.hasPhoneNumber = NO;
  result.phoneNumber = @"";
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (ValidateCodeRequest_ValidateType) type {
  return result.type;
}
- (ValidateCodeRequest_Builder*) setType:(ValidateCodeRequest_ValidateType) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (ValidateCodeRequest_Builder*) clearType {
  result.hasType = NO;
  result.type = ValidateCodeRequest_ValidateTypeRegister;
  return self;
}
@end

@interface ValidateCodeResponse ()
@property BOOL isSucceed;
@property ValidateCodeResponse_ErrorCodeType errorCode;
@end

@implementation ValidateCodeResponse

- (BOOL) hasIsSucceed {
  return !!hasIsSucceed_;
}
- (void) setHasIsSucceed:(BOOL) value {
  hasIsSucceed_ = !!value;
}
- (BOOL) isSucceed {
  return !!isSucceed_;
}
- (void) setIsSucceed:(BOOL) value {
  isSucceed_ = !!value;
}
- (BOOL) hasErrorCode {
  return !!hasErrorCode_;
}
- (void) setHasErrorCode:(BOOL) value {
  hasErrorCode_ = !!value;
}
@synthesize errorCode;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.isSucceed = NO;
    self.errorCode = ValidateCodeResponse_ErrorCodeTypeInvalidPhoneNumber;
  }
  return self;
}
static ValidateCodeResponse* defaultValidateCodeResponseInstance = nil;
+ (void) initialize {
  if (self == [ValidateCodeResponse class]) {
    defaultValidateCodeResponseInstance = [[ValidateCodeResponse alloc] init];
  }
}
+ (ValidateCodeResponse*) defaultInstance {
  return defaultValidateCodeResponseInstance;
}
- (ValidateCodeResponse*) defaultInstance {
  return defaultValidateCodeResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsSucceed) {
    [output writeBool:1 value:self.isSucceed];
  }
  if (self.hasErrorCode) {
    [output writeEnum:2 value:self.errorCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasIsSucceed) {
    size += computeBoolSize(1, self.isSucceed);
  }
  if (self.hasErrorCode) {
    size += computeEnumSize(2, self.errorCode);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ValidateCodeResponse*) parseFromData:(NSData*) data {
  return (ValidateCodeResponse*)[[[ValidateCodeResponse builder] mergeFromData:data] build];
}
+ (ValidateCodeResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ValidateCodeResponse*)[[[ValidateCodeResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ValidateCodeResponse*) parseFromInputStream:(NSInputStream*) input {
  return (ValidateCodeResponse*)[[[ValidateCodeResponse builder] mergeFromInputStream:input] build];
}
+ (ValidateCodeResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ValidateCodeResponse*)[[[ValidateCodeResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ValidateCodeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ValidateCodeResponse*)[[[ValidateCodeResponse builder] mergeFromCodedInputStream:input] build];
}
+ (ValidateCodeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ValidateCodeResponse*)[[[ValidateCodeResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ValidateCodeResponse_Builder*) builder {
  return [[[ValidateCodeResponse_Builder alloc] init] autorelease];
}
+ (ValidateCodeResponse_Builder*) builderWithPrototype:(ValidateCodeResponse*) prototype {
  return [[ValidateCodeResponse builder] mergeFrom:prototype];
}
- (ValidateCodeResponse_Builder*) builder {
  return [ValidateCodeResponse builder];
}
@end

BOOL ValidateCodeResponse_ErrorCodeTypeIsValidValue(ValidateCodeResponse_ErrorCodeType value) {
  switch (value) {
    case ValidateCodeResponse_ErrorCodeTypeInvalidPhoneNumber:
    case ValidateCodeResponse_ErrorCodeTypeInvalidType:
    case ValidateCodeResponse_ErrorCodeTypeExistingUserYes:
    case ValidateCodeResponse_ErrorCodeTypeExistingUserNo:
    case ValidateCodeResponse_ErrorCodeTypeLockTime:
    case ValidateCodeResponse_ErrorCodeTypeSendError:
      return YES;
    default:
      return NO;
  }
}
@interface ValidateCodeResponse_Builder()
@property (retain) ValidateCodeResponse* result;
@end

@implementation ValidateCodeResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ValidateCodeResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ValidateCodeResponse_Builder*) clear {
  self.result = [[[ValidateCodeResponse alloc] init] autorelease];
  return self;
}
- (ValidateCodeResponse_Builder*) clone {
  return [ValidateCodeResponse builderWithPrototype:result];
}
- (ValidateCodeResponse*) defaultInstance {
  return [ValidateCodeResponse defaultInstance];
}
- (ValidateCodeResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ValidateCodeResponse*) buildPartial {
  ValidateCodeResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ValidateCodeResponse_Builder*) mergeFrom:(ValidateCodeResponse*) other {
  if (other == [ValidateCodeResponse defaultInstance]) {
    return self;
  }
  if (other.hasIsSucceed) {
    [self setIsSucceed:other.isSucceed];
  }
  if (other.hasErrorCode) {
    [self setErrorCode:other.errorCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ValidateCodeResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ValidateCodeResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIsSucceed:[input readBool]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (ValidateCodeResponse_ErrorCodeTypeIsValidValue(value)) {
          [self setErrorCode:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasIsSucceed {
  return result.hasIsSucceed;
}
- (BOOL) isSucceed {
  return result.isSucceed;
}
- (ValidateCodeResponse_Builder*) setIsSucceed:(BOOL) value {
  result.hasIsSucceed = YES;
  result.isSucceed = value;
  return self;
}
- (ValidateCodeResponse_Builder*) clearIsSucceed {
  result.hasIsSucceed = NO;
  result.isSucceed = NO;
  return self;
}
- (BOOL) hasErrorCode {
  return result.hasErrorCode;
}
- (ValidateCodeResponse_ErrorCodeType) errorCode {
  return result.errorCode;
}
- (ValidateCodeResponse_Builder*) setErrorCode:(ValidateCodeResponse_ErrorCodeType) value {
  result.hasErrorCode = YES;
  result.errorCode = value;
  return self;
}
- (ValidateCodeResponse_Builder*) clearErrorCode {
  result.hasErrorCode = NO;
  result.errorCode = ValidateCodeResponse_ErrorCodeTypeInvalidPhoneNumber;
  return self;
}
@end

@interface ClientInfo ()
@property (retain) NSString* deviceId;
@property ClientInfo_OSType osType;
@property int32_t userId;
@property BOOL isPushEnable;
@end

@implementation ClientInfo

- (BOOL) hasDeviceId {
  return !!hasDeviceId_;
}
- (void) setHasDeviceId:(BOOL) value {
  hasDeviceId_ = !!value;
}
@synthesize deviceId;
- (BOOL) hasOsType {
  return !!hasOsType_;
}
- (void) setHasOsType:(BOOL) value {
  hasOsType_ = !!value;
}
@synthesize osType;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasIsPushEnable {
  return !!hasIsPushEnable_;
}
- (void) setHasIsPushEnable:(BOOL) value {
  hasIsPushEnable_ = !!value;
}
- (BOOL) isPushEnable {
  return !!isPushEnable_;
}
- (void) setIsPushEnable:(BOOL) value {
  isPushEnable_ = !!value;
}
- (void) dealloc {
  self.deviceId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.deviceId = @"";
    self.osType = ClientInfo_OSTypeIos;
    self.userId = 0;
    self.isPushEnable = NO;
  }
  return self;
}
static ClientInfo* defaultClientInfoInstance = nil;
+ (void) initialize {
  if (self == [ClientInfo class]) {
    defaultClientInfoInstance = [[ClientInfo alloc] init];
  }
}
+ (ClientInfo*) defaultInstance {
  return defaultClientInfoInstance;
}
- (ClientInfo*) defaultInstance {
  return defaultClientInfoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDeviceId) {
    [output writeString:1 value:self.deviceId];
  }
  if (self.hasOsType) {
    [output writeEnum:2 value:self.osType];
  }
  if (self.hasUserId) {
    [output writeInt32:3 value:self.userId];
  }
  if (self.hasIsPushEnable) {
    [output writeBool:4 value:self.isPushEnable];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasDeviceId) {
    size += computeStringSize(1, self.deviceId);
  }
  if (self.hasOsType) {
    size += computeEnumSize(2, self.osType);
  }
  if (self.hasUserId) {
    size += computeInt32Size(3, self.userId);
  }
  if (self.hasIsPushEnable) {
    size += computeBoolSize(4, self.isPushEnable);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ClientInfo*) parseFromData:(NSData*) data {
  return (ClientInfo*)[[[ClientInfo builder] mergeFromData:data] build];
}
+ (ClientInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientInfo*)[[[ClientInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClientInfo*) parseFromInputStream:(NSInputStream*) input {
  return (ClientInfo*)[[[ClientInfo builder] mergeFromInputStream:input] build];
}
+ (ClientInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientInfo*)[[[ClientInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClientInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClientInfo*)[[[ClientInfo builder] mergeFromCodedInputStream:input] build];
}
+ (ClientInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientInfo*)[[[ClientInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClientInfo_Builder*) builder {
  return [[[ClientInfo_Builder alloc] init] autorelease];
}
+ (ClientInfo_Builder*) builderWithPrototype:(ClientInfo*) prototype {
  return [[ClientInfo builder] mergeFrom:prototype];
}
- (ClientInfo_Builder*) builder {
  return [ClientInfo builder];
}
@end

BOOL ClientInfo_OSTypeIsValidValue(ClientInfo_OSType value) {
  switch (value) {
    case ClientInfo_OSTypeIos:
    case ClientInfo_OSTypeAndroid:
      return YES;
    default:
      return NO;
  }
}
@interface ClientInfo_Builder()
@property (retain) ClientInfo* result;
@end

@implementation ClientInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ClientInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClientInfo_Builder*) clear {
  self.result = [[[ClientInfo alloc] init] autorelease];
  return self;
}
- (ClientInfo_Builder*) clone {
  return [ClientInfo builderWithPrototype:result];
}
- (ClientInfo*) defaultInstance {
  return [ClientInfo defaultInstance];
}
- (ClientInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClientInfo*) buildPartial {
  ClientInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ClientInfo_Builder*) mergeFrom:(ClientInfo*) other {
  if (other == [ClientInfo defaultInstance]) {
    return self;
  }
  if (other.hasDeviceId) {
    [self setDeviceId:other.deviceId];
  }
  if (other.hasOsType) {
    [self setOsType:other.osType];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasIsPushEnable) {
    [self setIsPushEnable:other.isPushEnable];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClientInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClientInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setDeviceId:[input readString]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (ClientInfo_OSTypeIsValidValue(value)) {
          [self setOsType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 32: {
        [self setIsPushEnable:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasDeviceId {
  return result.hasDeviceId;
}
- (NSString*) deviceId {
  return result.deviceId;
}
- (ClientInfo_Builder*) setDeviceId:(NSString*) value {
  result.hasDeviceId = YES;
  result.deviceId = value;
  return self;
}
- (ClientInfo_Builder*) clearDeviceId {
  result.hasDeviceId = NO;
  result.deviceId = @"";
  return self;
}
- (BOOL) hasOsType {
  return result.hasOsType;
}
- (ClientInfo_OSType) osType {
  return result.osType;
}
- (ClientInfo_Builder*) setOsType:(ClientInfo_OSType) value {
  result.hasOsType = YES;
  result.osType = value;
  return self;
}
- (ClientInfo_Builder*) clearOsType {
  result.hasOsType = NO;
  result.osType = ClientInfo_OSTypeIos;
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (ClientInfo_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (ClientInfo_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasIsPushEnable {
  return result.hasIsPushEnable;
}
- (BOOL) isPushEnable {
  return result.isPushEnable;
}
- (ClientInfo_Builder*) setIsPushEnable:(BOOL) value {
  result.hasIsPushEnable = YES;
  result.isPushEnable = value;
  return self;
}
- (ClientInfo_Builder*) clearIsPushEnable {
  result.hasIsPushEnable = NO;
  result.isPushEnable = NO;
  return self;
}
@end

@interface ClientInfoRequest ()
@property int32_t userId;
@property (retain) NSString* token;
@property (retain) ClientInfo* clientInfo;
@end

@implementation ClientInfoRequest

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) value {
  hasToken_ = !!value;
}
@synthesize token;
- (BOOL) hasClientInfo {
  return !!hasClientInfo_;
}
- (void) setHasClientInfo:(BOOL) value {
  hasClientInfo_ = !!value;
}
@synthesize clientInfo;
- (void) dealloc {
  self.token = nil;
  self.clientInfo = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.token = @"";
    self.clientInfo = [ClientInfo defaultInstance];
  }
  return self;
}
static ClientInfoRequest* defaultClientInfoRequestInstance = nil;
+ (void) initialize {
  if (self == [ClientInfoRequest class]) {
    defaultClientInfoRequestInstance = [[ClientInfoRequest alloc] init];
  }
}
+ (ClientInfoRequest*) defaultInstance {
  return defaultClientInfoRequestInstance;
}
- (ClientInfoRequest*) defaultInstance {
  return defaultClientInfoRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasToken) {
    [output writeString:2 value:self.token];
  }
  if (self.hasClientInfo) {
    [output writeMessage:3 value:self.clientInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasToken) {
    size += computeStringSize(2, self.token);
  }
  if (self.hasClientInfo) {
    size += computeMessageSize(3, self.clientInfo);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ClientInfoRequest*) parseFromData:(NSData*) data {
  return (ClientInfoRequest*)[[[ClientInfoRequest builder] mergeFromData:data] build];
}
+ (ClientInfoRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientInfoRequest*)[[[ClientInfoRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClientInfoRequest*) parseFromInputStream:(NSInputStream*) input {
  return (ClientInfoRequest*)[[[ClientInfoRequest builder] mergeFromInputStream:input] build];
}
+ (ClientInfoRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientInfoRequest*)[[[ClientInfoRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClientInfoRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClientInfoRequest*)[[[ClientInfoRequest builder] mergeFromCodedInputStream:input] build];
}
+ (ClientInfoRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientInfoRequest*)[[[ClientInfoRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClientInfoRequest_Builder*) builder {
  return [[[ClientInfoRequest_Builder alloc] init] autorelease];
}
+ (ClientInfoRequest_Builder*) builderWithPrototype:(ClientInfoRequest*) prototype {
  return [[ClientInfoRequest builder] mergeFrom:prototype];
}
- (ClientInfoRequest_Builder*) builder {
  return [ClientInfoRequest builder];
}
@end

@interface ClientInfoRequest_Builder()
@property (retain) ClientInfoRequest* result;
@end

@implementation ClientInfoRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ClientInfoRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClientInfoRequest_Builder*) clear {
  self.result = [[[ClientInfoRequest alloc] init] autorelease];
  return self;
}
- (ClientInfoRequest_Builder*) clone {
  return [ClientInfoRequest builderWithPrototype:result];
}
- (ClientInfoRequest*) defaultInstance {
  return [ClientInfoRequest defaultInstance];
}
- (ClientInfoRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClientInfoRequest*) buildPartial {
  ClientInfoRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ClientInfoRequest_Builder*) mergeFrom:(ClientInfoRequest*) other {
  if (other == [ClientInfoRequest defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  if (other.hasClientInfo) {
    [self mergeClientInfo:other.clientInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClientInfoRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClientInfoRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 18: {
        [self setToken:[input readString]];
        break;
      }
      case 26: {
        ClientInfo_Builder* subBuilder = [ClientInfo builder];
        if (self.hasClientInfo) {
          [subBuilder mergeFrom:self.clientInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setClientInfo:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (ClientInfoRequest_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (ClientInfoRequest_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasToken {
  return result.hasToken;
}
- (NSString*) token {
  return result.token;
}
- (ClientInfoRequest_Builder*) setToken:(NSString*) value {
  result.hasToken = YES;
  result.token = value;
  return self;
}
- (ClientInfoRequest_Builder*) clearToken {
  result.hasToken = NO;
  result.token = @"";
  return self;
}
- (BOOL) hasClientInfo {
  return result.hasClientInfo;
}
- (ClientInfo*) clientInfo {
  return result.clientInfo;
}
- (ClientInfoRequest_Builder*) setClientInfo:(ClientInfo*) value {
  result.hasClientInfo = YES;
  result.clientInfo = value;
  return self;
}
- (ClientInfoRequest_Builder*) setClientInfoBuilder:(ClientInfo_Builder*) builderForValue {
  return [self setClientInfo:[builderForValue build]];
}
- (ClientInfoRequest_Builder*) mergeClientInfo:(ClientInfo*) value {
  if (result.hasClientInfo &&
      result.clientInfo != [ClientInfo defaultInstance]) {
    result.clientInfo =
      [[[ClientInfo builderWithPrototype:result.clientInfo] mergeFrom:value] buildPartial];
  } else {
    result.clientInfo = value;
  }
  result.hasClientInfo = YES;
  return self;
}
- (ClientInfoRequest_Builder*) clearClientInfo {
  result.hasClientInfo = NO;
  result.clientInfo = [ClientInfo defaultInstance];
  return self;
}
@end

@interface ClientInfoResponse ()
@property BOOL isSucceed;
@property ClientInfoResponse_ErrorCodeType errorCode;
@end

@implementation ClientInfoResponse

- (BOOL) hasIsSucceed {
  return !!hasIsSucceed_;
}
- (void) setHasIsSucceed:(BOOL) value {
  hasIsSucceed_ = !!value;
}
- (BOOL) isSucceed {
  return !!isSucceed_;
}
- (void) setIsSucceed:(BOOL) value {
  isSucceed_ = !!value;
}
- (BOOL) hasErrorCode {
  return !!hasErrorCode_;
}
- (void) setHasErrorCode:(BOOL) value {
  hasErrorCode_ = !!value;
}
@synthesize errorCode;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.isSucceed = NO;
    self.errorCode = ClientInfoResponse_ErrorCodeTypeInvalidUserId;
  }
  return self;
}
static ClientInfoResponse* defaultClientInfoResponseInstance = nil;
+ (void) initialize {
  if (self == [ClientInfoResponse class]) {
    defaultClientInfoResponseInstance = [[ClientInfoResponse alloc] init];
  }
}
+ (ClientInfoResponse*) defaultInstance {
  return defaultClientInfoResponseInstance;
}
- (ClientInfoResponse*) defaultInstance {
  return defaultClientInfoResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsSucceed) {
    [output writeBool:1 value:self.isSucceed];
  }
  if (self.hasErrorCode) {
    [output writeEnum:2 value:self.errorCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasIsSucceed) {
    size += computeBoolSize(1, self.isSucceed);
  }
  if (self.hasErrorCode) {
    size += computeEnumSize(2, self.errorCode);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ClientInfoResponse*) parseFromData:(NSData*) data {
  return (ClientInfoResponse*)[[[ClientInfoResponse builder] mergeFromData:data] build];
}
+ (ClientInfoResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientInfoResponse*)[[[ClientInfoResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ClientInfoResponse*) parseFromInputStream:(NSInputStream*) input {
  return (ClientInfoResponse*)[[[ClientInfoResponse builder] mergeFromInputStream:input] build];
}
+ (ClientInfoResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientInfoResponse*)[[[ClientInfoResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClientInfoResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ClientInfoResponse*)[[[ClientInfoResponse builder] mergeFromCodedInputStream:input] build];
}
+ (ClientInfoResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ClientInfoResponse*)[[[ClientInfoResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ClientInfoResponse_Builder*) builder {
  return [[[ClientInfoResponse_Builder alloc] init] autorelease];
}
+ (ClientInfoResponse_Builder*) builderWithPrototype:(ClientInfoResponse*) prototype {
  return [[ClientInfoResponse builder] mergeFrom:prototype];
}
- (ClientInfoResponse_Builder*) builder {
  return [ClientInfoResponse builder];
}
@end

BOOL ClientInfoResponse_ErrorCodeTypeIsValidValue(ClientInfoResponse_ErrorCodeType value) {
  switch (value) {
    case ClientInfoResponse_ErrorCodeTypeInvalidUserId:
    case ClientInfoResponse_ErrorCodeTypeInvalidToken:
    case ClientInfoResponse_ErrorCodeTypeAuthError:
      return YES;
    default:
      return NO;
  }
}
@interface ClientInfoResponse_Builder()
@property (retain) ClientInfoResponse* result;
@end

@implementation ClientInfoResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ClientInfoResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ClientInfoResponse_Builder*) clear {
  self.result = [[[ClientInfoResponse alloc] init] autorelease];
  return self;
}
- (ClientInfoResponse_Builder*) clone {
  return [ClientInfoResponse builderWithPrototype:result];
}
- (ClientInfoResponse*) defaultInstance {
  return [ClientInfoResponse defaultInstance];
}
- (ClientInfoResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ClientInfoResponse*) buildPartial {
  ClientInfoResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ClientInfoResponse_Builder*) mergeFrom:(ClientInfoResponse*) other {
  if (other == [ClientInfoResponse defaultInstance]) {
    return self;
  }
  if (other.hasIsSucceed) {
    [self setIsSucceed:other.isSucceed];
  }
  if (other.hasErrorCode) {
    [self setErrorCode:other.errorCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ClientInfoResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ClientInfoResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIsSucceed:[input readBool]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (ClientInfoResponse_ErrorCodeTypeIsValidValue(value)) {
          [self setErrorCode:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasIsSucceed {
  return result.hasIsSucceed;
}
- (BOOL) isSucceed {
  return result.isSucceed;
}
- (ClientInfoResponse_Builder*) setIsSucceed:(BOOL) value {
  result.hasIsSucceed = YES;
  result.isSucceed = value;
  return self;
}
- (ClientInfoResponse_Builder*) clearIsSucceed {
  result.hasIsSucceed = NO;
  result.isSucceed = NO;
  return self;
}
- (BOOL) hasErrorCode {
  return result.hasErrorCode;
}
- (ClientInfoResponse_ErrorCodeType) errorCode {
  return result.errorCode;
}
- (ClientInfoResponse_Builder*) setErrorCode:(ClientInfoResponse_ErrorCodeType) value {
  result.hasErrorCode = YES;
  result.errorCode = value;
  return self;
}
- (ClientInfoResponse_Builder*) clearErrorCode {
  result.hasErrorCode = NO;
  result.errorCode = ClientInfoResponse_ErrorCodeTypeInvalidUserId;
  return self;
}
@end

